com.android.volley.AuthFailureError -> com.android.volley.AuthFailureError:
    android.content.Intent mResolutionIntent -> mResolutionIntent
    android.content.Intent getResolutionIntent() -> getResolutionIntent
    java.lang.String getMessage() -> getMessage
com.android.volley.Cache -> com.android.volley.Cache:
    com.android.volley.Cache$Entry get(java.lang.String) -> get
    void put(java.lang.String,com.android.volley.Cache$Entry) -> put
    void initialize() -> initialize
    void invalidate(java.lang.String,boolean) -> invalidate
    void remove(java.lang.String) -> remove
    void clear() -> clear
com.android.volley.Cache$Entry -> com.android.volley.Cache$Entry:
    byte[] data -> data
    java.lang.String etag -> etag
    long serverDate -> serverDate
    long lastModified -> lastModified
    long ttl -> ttl
    long softTtl -> softTtl
    java.util.Map responseHeaders -> responseHeaders
    boolean isExpired() -> isExpired
    boolean refreshNeeded() -> refreshNeeded
com.android.volley.CacheDispatcher -> com.android.volley.CacheDispatcher:
    boolean DEBUG -> DEBUG
    java.util.concurrent.BlockingQueue mCacheQueue -> mCacheQueue
    java.util.concurrent.BlockingQueue mNetworkQueue -> mNetworkQueue
    com.android.volley.Cache mCache -> mCache
    com.android.volley.ResponseDelivery mDelivery -> mDelivery
    boolean mQuit -> mQuit
    void quit() -> quit
    void run() -> run
    java.util.concurrent.BlockingQueue access$0(com.android.volley.CacheDispatcher) -> access$0
com.android.volley.CacheDispatcher$1 -> com.android.volley.CacheDispatcher$1:
    com.android.volley.CacheDispatcher this$0 -> this$0
    com.android.volley.Request val$request -> val$request
    void run() -> run
com.android.volley.DefaultRetryPolicy -> com.android.volley.DefaultRetryPolicy:
    int mCurrentTimeoutMs -> mCurrentTimeoutMs
    int mCurrentRetryCount -> mCurrentRetryCount
    int mMaxNumRetries -> mMaxNumRetries
    float mBackoffMultiplier -> mBackoffMultiplier
    int DEFAULT_TIMEOUT_MS -> DEFAULT_TIMEOUT_MS
    int DEFAULT_MAX_RETRIES -> DEFAULT_MAX_RETRIES
    float DEFAULT_BACKOFF_MULT -> DEFAULT_BACKOFF_MULT
    int getCurrentTimeout() -> getCurrentTimeout
    int getCurrentRetryCount() -> getCurrentRetryCount
    float getBackoffMultiplier() -> getBackoffMultiplier
    void retry(com.android.volley.VolleyError) -> retry
    boolean hasAttemptRemaining() -> hasAttemptRemaining
com.android.volley.ExecutorDelivery -> com.android.volley.ExecutorDelivery:
    java.util.concurrent.Executor mResponsePoster -> mResponsePoster
    void postResponse(com.android.volley.Request,com.android.volley.Response) -> postResponse
    void postResponse(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable) -> postResponse
    void postError(com.android.volley.Request,com.android.volley.VolleyError) -> postError
com.android.volley.ExecutorDelivery$1 -> com.android.volley.ExecutorDelivery$1:
    com.android.volley.ExecutorDelivery this$0 -> this$0
    android.os.Handler val$handler -> val$handler
    void execute(java.lang.Runnable) -> execute
com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable -> com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable:
    com.android.volley.Request mRequest -> mRequest
    com.android.volley.Response mResponse -> mResponse
    java.lang.Runnable mRunnable -> mRunnable
    com.android.volley.ExecutorDelivery this$0 -> this$0
    void run() -> run
com.android.volley.InternalUtils -> com.android.volley.InternalUtils:
    char[] HEX_CHARS -> HEX_CHARS
    java.lang.String convertToHex(byte[]) -> convertToHex
    java.lang.String sha1Hash(java.lang.String) -> sha1Hash
com.android.volley.Network -> com.android.volley.Network:
    com.android.volley.NetworkResponse performRequest(com.android.volley.Request) -> performRequest
com.android.volley.NetworkDispatcher -> com.android.volley.NetworkDispatcher:
    java.util.concurrent.BlockingQueue mQueue -> mQueue
    com.android.volley.Network mNetwork -> mNetwork
    com.android.volley.Cache mCache -> mCache
    com.android.volley.ResponseDelivery mDelivery -> mDelivery
    boolean mQuit -> mQuit
    void quit() -> quit
    void addTrafficStatsTag(com.android.volley.Request) -> addTrafficStatsTag
    void run() -> run
    void parseAndDeliverNetworkError(com.android.volley.Request,com.android.volley.VolleyError) -> parseAndDeliverNetworkError
com.android.volley.NetworkError -> com.android.volley.NetworkError:
com.android.volley.NetworkResponse -> com.android.volley.NetworkResponse:
    int statusCode -> statusCode
    byte[] data -> data
    java.util.Map headers -> headers
    boolean notModified -> notModified
    long networkTimeMs -> networkTimeMs
com.android.volley.NoConnectionError -> com.android.volley.NoConnectionError:
com.android.volley.ParseError -> com.android.volley.ParseError:
com.android.volley.Request -> com.android.volley.Request:
    java.lang.String DEFAULT_PARAMS_ENCODING -> DEFAULT_PARAMS_ENCODING
    com.android.volley.VolleyLog$MarkerLog mEventLog -> mEventLog
    int mMethod -> mMethod
    java.lang.String mUrl -> mUrl
    java.lang.String mRedirectUrl -> mRedirectUrl
    java.lang.String mIdentifier -> mIdentifier
    int mDefaultTrafficStatsTag -> mDefaultTrafficStatsTag
    com.android.volley.Response$ErrorListener mErrorListener -> mErrorListener
    java.lang.Integer mSequence -> mSequence
    com.android.volley.RequestQueue mRequestQueue -> mRequestQueue
    boolean mShouldCache -> mShouldCache
    boolean mCanceled -> mCanceled
    boolean mResponseDelivered -> mResponseDelivered
    long mRequestBirthTime -> mRequestBirthTime
    long SLOW_REQUEST_THRESHOLD_MS -> SLOW_REQUEST_THRESHOLD_MS
    com.android.volley.RetryPolicy mRetryPolicy -> mRetryPolicy
    com.android.volley.Cache$Entry mCacheEntry -> mCacheEntry
    java.lang.Object mTag -> mTag
    long sCounter -> sCounter
    int getMethod() -> getMethod
    com.android.volley.Request setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    com.android.volley.Response$ErrorListener getErrorListener() -> getErrorListener
    int getTrafficStatsTag() -> getTrafficStatsTag
    int findDefaultTrafficStatsTag(java.lang.String) -> findDefaultTrafficStatsTag
    com.android.volley.Request setRetryPolicy(com.android.volley.RetryPolicy) -> setRetryPolicy
    void addMarker(java.lang.String) -> addMarker
    void finish(java.lang.String) -> finish
    com.android.volley.Request setRequestQueue(com.android.volley.RequestQueue) -> setRequestQueue
    com.android.volley.Request setSequence(int) -> setSequence
    int getSequence() -> getSequence
    java.lang.String getUrl() -> getUrl
    java.lang.String getOriginUrl() -> getOriginUrl
    java.lang.String getIdentifier() -> getIdentifier
    void setRedirectUrl(java.lang.String) -> setRedirectUrl
    java.lang.String getCacheKey() -> getCacheKey
    com.android.volley.Request setCacheEntry(com.android.volley.Cache$Entry) -> setCacheEntry
    com.android.volley.Cache$Entry getCacheEntry() -> getCacheEntry
    void cancel() -> cancel
    boolean isCanceled() -> isCanceled
    java.util.Map getHeaders() -> getHeaders
    java.util.Map getPostParams() -> getPostParams
    java.lang.String getPostParamsEncoding() -> getPostParamsEncoding
    java.lang.String getPostBodyContentType() -> getPostBodyContentType
    byte[] getPostBody() -> getPostBody
    java.util.Map getParams() -> getParams
    java.lang.String getParamsEncoding() -> getParamsEncoding
    java.lang.String getBodyContentType() -> getBodyContentType
    byte[] getBody() -> getBody
    byte[] encodeParameters(java.util.Map,java.lang.String) -> encodeParameters
    com.android.volley.Request setShouldCache(boolean) -> setShouldCache
    boolean shouldCache() -> shouldCache
    com.android.volley.Request$Priority getPriority() -> getPriority
    int getTimeoutMs() -> getTimeoutMs
    com.android.volley.RetryPolicy getRetryPolicy() -> getRetryPolicy
    void markDelivered() -> markDelivered
    boolean hasHadResponseDelivered() -> hasHadResponseDelivered
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
    com.android.volley.VolleyError parseNetworkError(com.android.volley.VolleyError) -> parseNetworkError
    void deliverResponse(java.lang.Object) -> deliverResponse
    void deliverError(com.android.volley.VolleyError) -> deliverError
    int compareTo(com.android.volley.Request) -> compareTo
    java.lang.String toString() -> toString
    java.lang.String createIdentifier(int,java.lang.String) -> createIdentifier
    int compareTo(java.lang.Object) -> compareTo
    com.android.volley.VolleyLog$MarkerLog access$1(com.android.volley.Request) -> access$1
com.android.volley.Request$1 -> com.android.volley.Request$1:
    com.android.volley.Request this$0 -> this$0
    java.lang.String val$tag -> val$tag
    long val$threadId -> val$threadId
    void run() -> run
com.android.volley.Request$Method -> com.android.volley.Request$Method:
    int DEPRECATED_GET_OR_POST -> DEPRECATED_GET_OR_POST
    int GET -> GET
    int POST -> POST
    int PUT -> PUT
    int DELETE -> DELETE
    int HEAD -> HEAD
    int OPTIONS -> OPTIONS
    int TRACE -> TRACE
    int PATCH -> PATCH
com.android.volley.Request$Priority -> com.android.volley.Request$Priority:
    com.android.volley.Request$Priority LOW -> LOW
    com.android.volley.Request$Priority NORMAL -> NORMAL
    com.android.volley.Request$Priority HIGH -> HIGH
    com.android.volley.Request$Priority IMMEDIATE -> IMMEDIATE
    com.android.volley.Request$Priority[] ENUM$VALUES -> ENUM$VALUES
    com.android.volley.Request$Priority[] values() -> values
    com.android.volley.Request$Priority valueOf(java.lang.String) -> valueOf
com.android.volley.RequestQueue -> com.android.volley.RequestQueue:
    java.util.concurrent.atomic.AtomicInteger mSequenceGenerator -> mSequenceGenerator
    java.util.Map mWaitingRequests -> mWaitingRequests
    java.util.Set mCurrentRequests -> mCurrentRequests
    java.util.concurrent.PriorityBlockingQueue mCacheQueue -> mCacheQueue
    java.util.concurrent.PriorityBlockingQueue mNetworkQueue -> mNetworkQueue
    int DEFAULT_NETWORK_THREAD_POOL_SIZE -> DEFAULT_NETWORK_THREAD_POOL_SIZE
    com.android.volley.Cache mCache -> mCache
    com.android.volley.Network mNetwork -> mNetwork
    com.android.volley.ResponseDelivery mDelivery -> mDelivery
    com.android.volley.NetworkDispatcher[] mDispatchers -> mDispatchers
    com.android.volley.CacheDispatcher mCacheDispatcher -> mCacheDispatcher
    java.util.List mFinishedListeners -> mFinishedListeners
    void start() -> start
    void stop() -> stop
    int getSequenceNumber() -> getSequenceNumber
    com.android.volley.Cache getCache() -> getCache
    void cancelAll(com.android.volley.RequestQueue$RequestFilter) -> cancelAll
    void cancelAll(java.lang.Object) -> cancelAll
    com.android.volley.Request add(com.android.volley.Request) -> add
    void finish(com.android.volley.Request) -> finish
    void addRequestFinishedListener(com.android.volley.RequestQueue$RequestFinishedListener) -> addRequestFinishedListener
    void removeRequestFinishedListener(com.android.volley.RequestQueue$RequestFinishedListener) -> removeRequestFinishedListener
com.android.volley.RequestQueue$1 -> com.android.volley.RequestQueue$1:
    com.android.volley.RequestQueue this$0 -> this$0
    java.lang.Object val$tag -> val$tag
    boolean apply(com.android.volley.Request) -> apply
com.android.volley.RequestQueue$RequestFilter -> com.android.volley.RequestQueue$RequestFilter:
    boolean apply(com.android.volley.Request) -> apply
com.android.volley.RequestQueue$RequestFinishedListener -> com.android.volley.RequestQueue$RequestFinishedListener:
    void onRequestFinished(com.android.volley.Request) -> onRequestFinished
com.android.volley.Response -> com.android.volley.Response:
    java.lang.Object result -> result
    com.android.volley.Cache$Entry cacheEntry -> cacheEntry
    com.android.volley.VolleyError error -> error
    boolean intermediate -> intermediate
    com.android.volley.Response success(java.lang.Object,com.android.volley.Cache$Entry) -> success
    com.android.volley.Response error(com.android.volley.VolleyError) -> error
    boolean isSuccess() -> isSuccess
com.android.volley.Response$ErrorListener -> com.android.volley.Response$ErrorListener:
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.android.volley.Response$Listener -> com.android.volley.Response$Listener:
    void onResponse(java.lang.Object) -> onResponse
com.android.volley.ResponseDelivery -> com.android.volley.ResponseDelivery:
    void postResponse(com.android.volley.Request,com.android.volley.Response) -> postResponse
    void postResponse(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable) -> postResponse
    void postError(com.android.volley.Request,com.android.volley.VolleyError) -> postError
com.android.volley.RetryPolicy -> com.android.volley.RetryPolicy:
    int getCurrentTimeout() -> getCurrentTimeout
    int getCurrentRetryCount() -> getCurrentRetryCount
    void retry(com.android.volley.VolleyError) -> retry
com.android.volley.ServerError -> com.android.volley.ServerError:
com.android.volley.TimeoutError -> com.android.volley.TimeoutError:
com.android.volley.VolleyError -> com.android.volley.VolleyError:
    com.android.volley.NetworkResponse networkResponse -> networkResponse
    long networkTimeMs -> networkTimeMs
    void setNetworkTimeMs(long) -> setNetworkTimeMs
    long getNetworkTimeMs() -> getNetworkTimeMs
com.android.volley.VolleyLog -> com.android.volley.VolleyLog:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    void setTag(java.lang.String) -> setTag
    void v(java.lang.String,java.lang.Object[]) -> v
    void d(java.lang.String,java.lang.Object[]) -> d
    void e(java.lang.String,java.lang.Object[]) -> e
    void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> e
    void wtf(java.lang.String,java.lang.Object[]) -> wtf
    void wtf(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> wtf
    java.lang.String buildMessage(java.lang.String,java.lang.Object[]) -> buildMessage
com.android.volley.VolleyLog$MarkerLog -> com.android.volley.VolleyLog$MarkerLog:
    boolean ENABLED -> ENABLED
    long MIN_DURATION_FOR_LOGGING_MS -> MIN_DURATION_FOR_LOGGING_MS
    java.util.List mMarkers -> mMarkers
    boolean mFinished -> mFinished
    void add(java.lang.String,long) -> add
    void finish(java.lang.String) -> finish
    void finalize() -> finalize
    long getTotalDuration() -> getTotalDuration
com.android.volley.VolleyLog$MarkerLog$Marker -> com.android.volley.VolleyLog$MarkerLog$Marker:
    java.lang.String name -> name
    long thread -> thread
    long time -> time
com.android.volley.toolbox.AndroidAuthenticator -> com.android.volley.toolbox.AndroidAuthenticator:
    android.accounts.AccountManager mAccountManager -> mAccountManager
    android.accounts.Account mAccount -> mAccount
    java.lang.String mAuthTokenType -> mAuthTokenType
    boolean mNotifyAuthFailure -> mNotifyAuthFailure
    android.accounts.Account getAccount() -> getAccount
    java.lang.String getAuthToken() -> getAuthToken
    void invalidateAuthToken(java.lang.String) -> invalidateAuthToken
com.android.volley.toolbox.Authenticator -> com.android.volley.toolbox.Authenticator:
    java.lang.String getAuthToken() -> getAuthToken
    void invalidateAuthToken(java.lang.String) -> invalidateAuthToken
com.android.volley.toolbox.BasicNetwork -> com.android.volley.toolbox.BasicNetwork:
    boolean DEBUG -> DEBUG
    int SLOW_REQUEST_THRESHOLD_MS -> SLOW_REQUEST_THRESHOLD_MS
    int DEFAULT_POOL_SIZE -> DEFAULT_POOL_SIZE
    com.android.volley.toolbox.HttpStack mHttpStack -> mHttpStack
    com.android.volley.toolbox.ByteArrayPool mPool -> mPool
    com.android.volley.NetworkResponse performRequest(com.android.volley.Request) -> performRequest
    void logSlowRequests(long,com.android.volley.Request,byte[],org.apache.http.StatusLine) -> logSlowRequests
    void attemptRetryOnException(java.lang.String,com.android.volley.Request,com.android.volley.VolleyError) -> attemptRetryOnException
    void addCacheHeaders(java.util.Map,com.android.volley.Cache$Entry) -> addCacheHeaders
    void logError(java.lang.String,java.lang.String,long) -> logError
    byte[] entityToBytes(org.apache.http.HttpEntity) -> entityToBytes
    java.util.Map convertHeaders(org.apache.http.Header[]) -> convertHeaders
com.android.volley.toolbox.ByteArrayPool -> com.android.volley.toolbox.ByteArrayPool:
    java.util.List mBuffersByLastUse -> mBuffersByLastUse
    java.util.List mBuffersBySize -> mBuffersBySize
    int mCurrentSize -> mCurrentSize
    int mSizeLimit -> mSizeLimit
    java.util.Comparator BUF_COMPARATOR -> BUF_COMPARATOR
    byte[] getBuf(int) -> getBuf
    void returnBuf(byte[]) -> returnBuf
    void trim() -> trim
com.android.volley.toolbox.ByteArrayPool$1 -> com.android.volley.toolbox.ByteArrayPool$1:
    int compare(byte[],byte[]) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.android.volley.toolbox.ClearCacheRequest -> com.android.volley.toolbox.ClearCacheRequest:
    com.android.volley.Cache mCache -> mCache
    java.lang.Runnable mCallback -> mCallback
    boolean isCanceled() -> isCanceled
    com.android.volley.Request$Priority getPriority() -> getPriority
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
    void deliverResponse(java.lang.Object) -> deliverResponse
com.android.volley.toolbox.DiskBasedCache -> com.android.volley.toolbox.DiskBasedCache:
    java.util.Map mEntries -> mEntries
    long mTotalSize -> mTotalSize
    java.io.File mRootDirectory -> mRootDirectory
    int mMaxCacheSizeInBytes -> mMaxCacheSizeInBytes
    int DEFAULT_DISK_USAGE_BYTES -> DEFAULT_DISK_USAGE_BYTES
    float HYSTERESIS_FACTOR -> HYSTERESIS_FACTOR
    int CACHE_MAGIC -> CACHE_MAGIC
    void clear() -> clear
    com.android.volley.Cache$Entry get(java.lang.String) -> get
    void initialize() -> initialize
    void invalidate(java.lang.String,boolean) -> invalidate
    void put(java.lang.String,com.android.volley.Cache$Entry) -> put
    void remove(java.lang.String) -> remove
    java.lang.String getFilenameForKey(java.lang.String) -> getFilenameForKey
    java.io.File getFileForKey(java.lang.String) -> getFileForKey
    void pruneIfNeeded(int) -> pruneIfNeeded
    void putEntry(java.lang.String,com.android.volley.toolbox.DiskBasedCache$CacheHeader) -> putEntry
    void removeEntry(java.lang.String) -> removeEntry
    byte[] streamToBytes(java.io.InputStream,int) -> streamToBytes
    int read(java.io.InputStream) -> read
    void writeInt(java.io.OutputStream,int) -> writeInt
    int readInt(java.io.InputStream) -> readInt
    void writeLong(java.io.OutputStream,long) -> writeLong
    long readLong(java.io.InputStream) -> readLong
    void writeString(java.io.OutputStream,java.lang.String) -> writeString
    java.lang.String readString(java.io.InputStream) -> readString
    void writeStringStringMap(java.util.Map,java.io.OutputStream) -> writeStringStringMap
    java.util.Map readStringStringMap(java.io.InputStream) -> readStringStringMap
com.android.volley.toolbox.DiskBasedCache$CacheHeader -> com.android.volley.toolbox.DiskBasedCache$CacheHeader:
    long size -> size
    java.lang.String key -> key
    java.lang.String etag -> etag
    long serverDate -> serverDate
    long lastModified -> lastModified
    long ttl -> ttl
    long softTtl -> softTtl
    java.util.Map responseHeaders -> responseHeaders
    com.android.volley.toolbox.DiskBasedCache$CacheHeader readHeader(java.io.InputStream) -> readHeader
    com.android.volley.Cache$Entry toCacheEntry(byte[]) -> toCacheEntry
    boolean writeHeader(java.io.OutputStream) -> writeHeader
com.android.volley.toolbox.DiskBasedCache$CountingInputStream -> com.android.volley.toolbox.DiskBasedCache$CountingInputStream:
    int bytesRead -> bytesRead
    int read() -> read
    int read(byte[],int,int) -> read
    int access$1(com.android.volley.toolbox.DiskBasedCache$CountingInputStream) -> access$1
com.android.volley.toolbox.HttpClientStack -> com.android.volley.toolbox.HttpClientStack:
    org.apache.http.client.HttpClient mClient -> mClient
    java.lang.String HEADER_CONTENT_TYPE -> HEADER_CONTENT_TYPE
    void addHeaders(org.apache.http.client.methods.HttpUriRequest,java.util.Map) -> addHeaders
    java.util.List getPostParameterPairs(java.util.Map) -> getPostParameterPairs
    org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> performRequest
    org.apache.http.client.methods.HttpUriRequest createHttpRequest(com.android.volley.Request,java.util.Map) -> createHttpRequest
    void setEntityIfNonEmptyBody(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,com.android.volley.Request) -> setEntityIfNonEmptyBody
    void onPrepareRequest(org.apache.http.client.methods.HttpUriRequest) -> onPrepareRequest
com.android.volley.toolbox.HttpClientStack$HttpPatch -> com.android.volley.toolbox.HttpClientStack$HttpPatch:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
com.android.volley.toolbox.HttpHeaderParser -> com.android.volley.toolbox.HttpHeaderParser:
    com.android.volley.Cache$Entry parseCacheHeaders(com.android.volley.NetworkResponse) -> parseCacheHeaders
    long parseDateAsEpoch(java.lang.String) -> parseDateAsEpoch
    java.lang.String parseCharset(java.util.Map,java.lang.String) -> parseCharset
    java.lang.String parseCharset(java.util.Map) -> parseCharset
com.android.volley.toolbox.HttpStack -> com.android.volley.toolbox.HttpStack:
    org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> performRequest
com.android.volley.toolbox.HurlStack -> com.android.volley.toolbox.HurlStack:
    java.lang.String HEADER_CONTENT_TYPE -> HEADER_CONTENT_TYPE
    com.android.volley.toolbox.HurlStack$UrlRewriter mUrlRewriter -> mUrlRewriter
    javax.net.ssl.SSLSocketFactory mSslSocketFactory -> mSslSocketFactory
    org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> performRequest
    org.apache.http.HttpEntity entityFromConnection(java.net.HttpURLConnection) -> entityFromConnection
    java.net.HttpURLConnection createConnection(java.net.URL) -> createConnection
    java.net.HttpURLConnection openConnection(java.net.URL,com.android.volley.Request) -> openConnection
    void setConnectionParametersForRequest(java.net.HttpURLConnection,com.android.volley.Request) -> setConnectionParametersForRequest
    void addBodyIfExists(java.net.HttpURLConnection,com.android.volley.Request) -> addBodyIfExists
com.android.volley.toolbox.HurlStack$UrlRewriter -> com.android.volley.toolbox.HurlStack$UrlRewriter:
    java.lang.String rewriteUrl(java.lang.String) -> rewriteUrl
com.android.volley.toolbox.ImageLoader -> com.android.volley.toolbox.ImageLoader:
    com.android.volley.RequestQueue mRequestQueue -> mRequestQueue
    int mBatchResponseDelayMs -> mBatchResponseDelayMs
    com.android.volley.toolbox.ImageLoader$ImageCache mCache -> mCache
    java.util.HashMap mInFlightRequests -> mInFlightRequests
    java.util.HashMap mBatchedResponses -> mBatchedResponses
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRunnable -> mRunnable
    com.android.volley.toolbox.ImageLoader$ImageListener getImageListener(android.widget.ImageView,int,int) -> getImageListener
    boolean isCached(java.lang.String,int,int) -> isCached
    boolean isCached(java.lang.String,int,int,android.widget.ImageView$ScaleType) -> isCached
    com.android.volley.toolbox.ImageLoader$ImageContainer get(java.lang.String,com.android.volley.toolbox.ImageLoader$ImageListener) -> get
    com.android.volley.toolbox.ImageLoader$ImageContainer get(java.lang.String,com.android.volley.toolbox.ImageLoader$ImageListener,int,int) -> get
    com.android.volley.toolbox.ImageLoader$ImageContainer get(java.lang.String,com.android.volley.toolbox.ImageLoader$ImageListener,int,int,android.widget.ImageView$ScaleType) -> get
    com.android.volley.Request makeImageRequest(java.lang.String,int,int,android.widget.ImageView$ScaleType,java.lang.String) -> makeImageRequest
    void setBatchedResponseDelay(int) -> setBatchedResponseDelay
    void onGetImageSuccess(java.lang.String,android.graphics.Bitmap) -> onGetImageSuccess
    void onGetImageError(java.lang.String,com.android.volley.VolleyError) -> onGetImageError
    void batchResponse(java.lang.String,com.android.volley.toolbox.ImageLoader$BatchedImageRequest) -> batchResponse
    void throwIfNotOnMainThread() -> throwIfNotOnMainThread
    java.lang.String getCacheKey(java.lang.String,int,int,android.widget.ImageView$ScaleType) -> getCacheKey
    java.util.HashMap access$0(com.android.volley.toolbox.ImageLoader) -> access$0
    java.util.HashMap access$1(com.android.volley.toolbox.ImageLoader) -> access$1
    void access$2(com.android.volley.toolbox.ImageLoader,java.lang.Runnable) -> access$2
com.android.volley.toolbox.ImageLoader$1 -> com.android.volley.toolbox.ImageLoader$1:
    int val$errorImageResId -> val$errorImageResId
    android.widget.ImageView val$view -> val$view
    int val$defaultImageResId -> val$defaultImageResId
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
    void onResponse(com.android.volley.toolbox.ImageLoader$ImageContainer,boolean) -> onResponse
com.android.volley.toolbox.ImageLoader$2 -> com.android.volley.toolbox.ImageLoader$2:
    com.android.volley.toolbox.ImageLoader this$0 -> this$0
    java.lang.String val$cacheKey -> val$cacheKey
    void onResponse(android.graphics.Bitmap) -> onResponse
    void onResponse(java.lang.Object) -> onResponse
com.android.volley.toolbox.ImageLoader$3 -> com.android.volley.toolbox.ImageLoader$3:
    com.android.volley.toolbox.ImageLoader this$0 -> this$0
    java.lang.String val$cacheKey -> val$cacheKey
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.android.volley.toolbox.ImageLoader$4 -> com.android.volley.toolbox.ImageLoader$4:
    com.android.volley.toolbox.ImageLoader this$0 -> this$0
    void run() -> run
com.android.volley.toolbox.ImageLoader$BatchedImageRequest -> com.android.volley.toolbox.ImageLoader$BatchedImageRequest:
    com.android.volley.Request mRequest -> mRequest
    android.graphics.Bitmap mResponseBitmap -> mResponseBitmap
    com.android.volley.VolleyError mError -> mError
    java.util.LinkedList mContainers -> mContainers
    com.android.volley.toolbox.ImageLoader this$0 -> this$0
    void setError(com.android.volley.VolleyError) -> setError
    com.android.volley.VolleyError getError() -> getError
    void addContainer(com.android.volley.toolbox.ImageLoader$ImageContainer) -> addContainer
    boolean removeContainerAndCancelIfNecessary(com.android.volley.toolbox.ImageLoader$ImageContainer) -> removeContainerAndCancelIfNecessary
    java.util.LinkedList access$0(com.android.volley.toolbox.ImageLoader$BatchedImageRequest) -> access$0
    void access$1(com.android.volley.toolbox.ImageLoader$BatchedImageRequest,android.graphics.Bitmap) -> access$1
    android.graphics.Bitmap access$2(com.android.volley.toolbox.ImageLoader$BatchedImageRequest) -> access$2
com.android.volley.toolbox.ImageLoader$ImageCache -> com.android.volley.toolbox.ImageLoader$ImageCache:
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    void putBitmap(java.lang.String,android.graphics.Bitmap) -> putBitmap
com.android.volley.toolbox.ImageLoader$ImageContainer -> com.android.volley.toolbox.ImageLoader$ImageContainer:
    android.graphics.Bitmap mBitmap -> mBitmap
    com.android.volley.toolbox.ImageLoader$ImageListener mListener -> mListener
    java.lang.String mCacheKey -> mCacheKey
    java.lang.String mRequestUrl -> mRequestUrl
    com.android.volley.toolbox.ImageLoader this$0 -> this$0
    void cancelRequest() -> cancelRequest
    android.graphics.Bitmap getBitmap() -> getBitmap
    java.lang.String getRequestUrl() -> getRequestUrl
    com.android.volley.toolbox.ImageLoader$ImageListener access$0(com.android.volley.toolbox.ImageLoader$ImageContainer) -> access$0
    void access$1(com.android.volley.toolbox.ImageLoader$ImageContainer,android.graphics.Bitmap) -> access$1
com.android.volley.toolbox.ImageLoader$ImageListener -> com.android.volley.toolbox.ImageLoader$ImageListener:
    void onResponse(com.android.volley.toolbox.ImageLoader$ImageContainer,boolean) -> onResponse
com.android.volley.toolbox.ImageRequest -> com.android.volley.toolbox.ImageRequest:
    int IMAGE_TIMEOUT_MS -> IMAGE_TIMEOUT_MS
    int IMAGE_MAX_RETRIES -> IMAGE_MAX_RETRIES
    float IMAGE_BACKOFF_MULT -> IMAGE_BACKOFF_MULT
    com.android.volley.Response$Listener mListener -> mListener
    android.graphics.Bitmap$Config mDecodeConfig -> mDecodeConfig
    int mMaxWidth -> mMaxWidth
    int mMaxHeight -> mMaxHeight
    android.widget.ImageView$ScaleType mScaleType -> mScaleType
    java.lang.Object sDecodeLock -> sDecodeLock
    com.android.volley.Request$Priority getPriority() -> getPriority
    int getResizedDimension(int,int,int,int,android.widget.ImageView$ScaleType) -> getResizedDimension
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
    com.android.volley.Response doParse(com.android.volley.NetworkResponse) -> doParse
    void deliverResponse(android.graphics.Bitmap) -> deliverResponse
    int findBestSampleSize(int,int,int,int) -> findBestSampleSize
    void deliverResponse(java.lang.Object) -> deliverResponse
com.android.volley.toolbox.JsonArrayRequest -> com.android.volley.toolbox.JsonArrayRequest:
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
com.android.volley.toolbox.JsonObjectRequest -> com.android.volley.toolbox.JsonObjectRequest:
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
com.android.volley.toolbox.JsonRequest -> com.android.volley.toolbox.JsonRequest:
    java.lang.String PROTOCOL_CHARSET -> PROTOCOL_CHARSET
    java.lang.String PROTOCOL_CONTENT_TYPE -> PROTOCOL_CONTENT_TYPE
    com.android.volley.Response$Listener mListener -> mListener
    java.lang.String mRequestBody -> mRequestBody
    void deliverResponse(java.lang.Object) -> deliverResponse
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
    java.lang.String getPostBodyContentType() -> getPostBodyContentType
    byte[] getPostBody() -> getPostBody
    java.lang.String getBodyContentType() -> getBodyContentType
    byte[] getBody() -> getBody
com.android.volley.toolbox.NetworkImageView -> com.android.volley.toolbox.NetworkImageView:
    java.lang.String mUrl -> mUrl
    int mDefaultImageId -> mDefaultImageId
    int mErrorImageId -> mErrorImageId
    com.android.volley.toolbox.ImageLoader mImageLoader -> mImageLoader
    com.android.volley.toolbox.ImageLoader$ImageContainer mImageContainer -> mImageContainer
    void setImageUrl(java.lang.String,com.android.volley.toolbox.ImageLoader) -> setImageUrl
    java.lang.String getImageURL() -> getImageURL
    void setDefaultImageResId(int) -> setDefaultImageResId
    void setErrorImageResId(int) -> setErrorImageResId
    void loadImageIfNecessary(boolean) -> loadImageIfNecessary
    void setDefaultImageOrNull() -> setDefaultImageOrNull
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    void drawableStateChanged() -> drawableStateChanged
    int access$0(com.android.volley.toolbox.NetworkImageView) -> access$0
    int access$1(com.android.volley.toolbox.NetworkImageView) -> access$1
com.android.volley.toolbox.NetworkImageView$1 -> com.android.volley.toolbox.NetworkImageView$1:
    com.android.volley.toolbox.NetworkImageView this$0 -> this$0
    boolean val$isInLayoutPass -> val$isInLayoutPass
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
    void onResponse(com.android.volley.toolbox.ImageLoader$ImageContainer,boolean) -> onResponse
com.android.volley.toolbox.NetworkImageView$1$1 -> com.android.volley.toolbox.NetworkImageView$1$1:
    com.android.volley.toolbox.NetworkImageView$1 this$1 -> this$1
    com.android.volley.toolbox.ImageLoader$ImageContainer val$response -> val$response
    void run() -> run
com.android.volley.toolbox.NoCache -> com.android.volley.toolbox.NoCache:
    void clear() -> clear
    com.android.volley.Cache$Entry get(java.lang.String) -> get
    void put(java.lang.String,com.android.volley.Cache$Entry) -> put
    void invalidate(java.lang.String,boolean) -> invalidate
    void remove(java.lang.String) -> remove
    void initialize() -> initialize
com.android.volley.toolbox.PoolingByteArrayOutputStream -> com.android.volley.toolbox.PoolingByteArrayOutputStream:
    int DEFAULT_SIZE -> DEFAULT_SIZE
    com.android.volley.toolbox.ByteArrayPool mPool -> mPool
    void close() -> close
    void finalize() -> finalize
    void expand(int) -> expand
    void write(byte[],int,int) -> write
    void write(int) -> write
com.android.volley.toolbox.RequestFuture -> com.android.volley.toolbox.RequestFuture:
    com.android.volley.Request mRequest -> mRequest
    boolean mResultReceived -> mResultReceived
    java.lang.Object mResult -> mResult
    com.android.volley.VolleyError mException -> mException
    com.android.volley.toolbox.RequestFuture newFuture() -> newFuture
    void setRequest(com.android.volley.Request) -> setRequest
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object doGet(java.lang.Long) -> doGet
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    void onResponse(java.lang.Object) -> onResponse
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.android.volley.toolbox.StringRequest -> com.android.volley.toolbox.StringRequest:
    com.android.volley.Response$Listener mListener -> mListener
    void deliverResponse(java.lang.String) -> deliverResponse
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
    void deliverResponse(java.lang.Object) -> deliverResponse
com.android.volley.toolbox.Volley -> com.android.volley.toolbox.Volley:
    java.lang.String DEFAULT_CACHE_DIR -> DEFAULT_CACHE_DIR
    com.android.volley.RequestQueue newRequestQueue(android.content.Context,com.android.volley.toolbox.HttpStack,int) -> newRequestQueue
    com.android.volley.RequestQueue newRequestQueue(android.content.Context,int) -> newRequestQueue
    com.android.volley.RequestQueue newRequestQueue(android.content.Context,com.android.volley.toolbox.HttpStack) -> newRequestQueue
    com.android.volley.RequestQueue newRequestQueue(android.content.Context) -> newRequestQueue
com.cooee.download.Assets -> com.cooee.download.a:
    android.content.Context mContext -> a
    org.json.JSONObject config -> b
    org.json.JSONObject getConfig(android.content.Context) -> getConfig
    org.json.JSONObject getConfig(java.lang.String) -> a
    java.lang.String readTextFile(java.io.InputStream) -> a
com.cooee.download.DownloadProxy -> com.cooee.download.DownloadProxy:
    com.cooee.download.DownloadProxy proxy -> a
    android.content.Context context -> b
    com.cooee.download.DownloadProxy$OperateFolderReceiver receiver -> c
    android.content.SharedPreferences preferences -> d
    java.lang.String curDownloadPkgName -> e
    java.lang.String curResID -> f
    java.util.List listeners -> g
    com.cooee.download.DownloadProxy getInstance(android.content.Context) -> getInstance
    void addListener(com.ha.hb.BaseDownloadHelper$DownloadListener) -> addListener
    void onDestroy() -> onDestroy
    void start() -> start
    java.lang.String[] getVirtureIconDownloadUrl(android.content.Context,java.lang.String) -> getVirtureIconDownloadUrl
    java.lang.String getParams$47921032() -> a
    void markDownload(java.lang.String,java.lang.String) -> markDownload
    void markInstall(java.lang.String,java.lang.String) -> markInstall
    boolean hasDownload(java.lang.String,java.lang.String) -> hasDownload
    boolean hasInstall(java.lang.String,java.lang.String) -> hasInstall
    void markUninstall(java.lang.String,java.lang.String) -> markUninstall
    java.util.List access$0(com.cooee.download.DownloadProxy) -> a
com.cooee.download.DownloadProxy$FolderItem -> com.cooee.download.b:
    java.lang.String pkgName -> a
    java.lang.String resID -> b
    boolean download -> c
    boolean install -> d
    com.cooee.download.DownloadProxy this$0 -> e
    java.lang.String toString() -> toString
com.cooee.download.DownloadProxy$OperateFolderReceiver -> com.cooee.download.DownloadProxy$OperateFolderReceiver:
    com.cooee.download.DownloadProxy this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    com.cooee.download.DownloadProxy access$0(com.cooee.download.DownloadProxy$OperateFolderReceiver) -> a
com.cooee.download.DownloadProxy$OperateFolderReceiver$1 -> com.cooee.download.c:
    com.cooee.download.DownloadProxy$OperateFolderReceiver this$1 -> a
    android.content.Context val$context -> b
    java.lang.String val$packageName -> c
    void run() -> run
com.cooee.download.DownloadProxy$OperateFolderReceiver$2 -> com.cooee.download.d:
    com.cooee.download.DownloadProxy$OperateFolderReceiver this$1 -> a
    android.content.Context val$context -> b
    java.lang.String val$packageName -> c
    void run() -> run
com.cooee.download.DownloadUtils -> com.cooee.download.e:
    org.apache.http.client.HttpClient customerHttpClient -> c
    char[] hexDigits -> a
    java.lang.String OPERATE_FOLDER_CLIENT_VERSION -> b
    java.lang.String getFolderName(java.lang.String) -> getFolderName
    java.lang.String getAppName(java.lang.String) -> getAppName
    java.lang.String getMD5EncruptKey(java.lang.String) -> getMD5EncruptKey
    int verifyAPKFile(android.content.Context,java.lang.String) -> verifyAPKFile
    void installAPKFile(android.content.Context,com.ha.hb.BaseDownloadHelper$DownloadListener,java.lang.String) -> installAPKFile
    boolean isNetworkAvailable(android.content.Context) -> isNetworkAvailable
    long getDownloadLength(java.lang.String) -> getDownloadLength
    java.lang.String getSDPath() -> getSDPath
    java.io.InputStream sendDownload(java.lang.String,long,long) -> sendDownload
    java.io.InputStream sendGet(java.lang.String,java.lang.String) -> sendGet
    java.lang.String getShellID(android.content.Context) -> getShellID
    java.lang.String getVersion() -> getVersion
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    java.lang.String[] post(android.content.Context,java.lang.String,java.lang.String) -> post
com.cooee.download.Installation -> com.cooee.download.f:
    java.lang.String id(android.content.Context) -> id
    java.lang.String getMyUUID(android.content.Context) -> getMyUUID
com.cooee.download.LogHelper -> com.cooee.download.g:
    android.content.SharedPreferences curPreferences -> a
    java.util.List logtextList -> b
    void initPreferences(android.content.SharedPreferences) -> initPreferences
    boolean log(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> log
    boolean findLogtext(java.lang.String) -> a
    void saveLogList() -> a
    java.lang.String getLongParams(android.content.Context) -> a
    java.lang.String getParams0017WithMd5(java.lang.String,java.lang.String) -> a
    java.lang.String getParams0017List(java.lang.String,java.lang.String) -> b
    java.lang.String getParams0017NoMd5$5b1592bd(android.content.Context) -> b
    java.lang.String getParams(android.content.Context,java.lang.String,boolean) -> a
com.cooee.download.StatisticsUtil -> com.cooee.download.h:
    java.lang.String cooeeGetIccid(android.content.Context,int) -> cooeeGetIccid
    java.lang.String getSubId(android.content.Context) -> getSubId
    java.lang.String getDevId(android.content.Context) -> getDevId
    java.lang.String getLine1Num(android.content.Context) -> getLine1Num
    java.lang.String getIccid(android.content.Context) -> getIccid
com.cooee.shell.download.DownloaderActivityHullV5 -> com.cooee.shell.download.DownloaderActivityHullV5:
com.cooee.shell.moduleupdate.EncryptUtils -> com.cooee.shell.a.a:
    byte[] decodeBase64String(java.lang.String) -> decodeBase64String
    java.lang.String encodeMD5String(byte[]) -> encodeMD5String
    java.io.File getFileFromString(java.lang.String,java.lang.String) -> getFileFromString
    java.io.File getFileFromBytes(android.content.Context,byte[],java.lang.String) -> getFileFromBytes
com.cooee.shell.moduleupdate.RijndaelCrypt -> com.cooee.shell.a.b:
    java.lang.String TRANSFORMATION -> g
    java.lang.String ALGORITHM -> h
    javax.crypto.Cipher _cipher -> i
    javax.crypto.SecretKey _password -> j
    javax.crypto.spec.IvParameterSpec _IVParamSpec -> k
    byte[] IV_CG -> a
    byte[] IV_UF -> b
    byte[] IV_SJ -> c
    java.lang.String PWD_CG -> d
    java.lang.String PWD_UF -> e
    java.lang.String PWD_SJ -> f
    byte[] encryptToByteArray(byte[]) -> encryptToByteArray
    java.lang.String encrypt(byte[]) -> encrypt
    java.lang.String encrypt(java.lang.String) -> encrypt
    java.lang.String decrypt(byte[],java.lang.String) -> decrypt
    java.lang.String decrypt(java.lang.String) -> decrypt
com.cooee.shell.sdk.AppData -> com.cooee.shell.sdk.a:
    java.lang.String packageName -> a
    java.lang.String appName -> b
    java.lang.String versionCode -> c
    java.lang.String versionName -> d
    java.lang.String appP04 -> e
    boolean equals(com.cooee.shell.sdk.AppData) -> equals
    void setPackageName(java.lang.String) -> setPackageName
    void setAppName(java.lang.String) -> setAppName
    void setVersionCode(java.lang.String) -> setVersionCode
    void setVersionName(java.lang.String) -> setVersionName
    void setAppP04(java.lang.String) -> setAppP04
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getAppName() -> getAppName
    java.lang.String getVersionCode() -> getVersionCode
    java.lang.String getVersionName() -> getVersionName
    java.lang.String getAppP04() -> getAppP04
com.cooee.shell.sdk.AppNameXml -> com.cooee.shell.sdk.b:
    void saveApplistXml(android.content.Context) -> saveApplistXml
    void writeAppDataToXml(java.util.ArrayList) -> a
    java.util.ArrayList getAppDataFromXml() -> getAppDataFromXml
    boolean isApplistXmlExist() -> a
    java.io.File getApplistXmlFile() -> b
    com.cooee.shell.sdk.AppData getAppDataFromContext(android.content.Context) -> getAppDataFromContext
com.cooee.shell.sdk.AssetVerInfo -> com.cooee.shell.sdk.c:
    com.cooee.shell.sdk.AssetVerInfo instance -> b
    java.lang.String appVerName -> a
    java.lang.String getAppVerName() -> getAppVerName
    void setAppVerName(java.lang.String) -> setAppVerName
    com.cooee.shell.sdk.AssetVerInfo getInstance(android.content.Context) -> getInstance
    void saveParams(android.content.Context) -> saveParams
com.cooee.shell.sdk.CooeeCmChannel -> com.cooee.shell.sdk.d:
    byte[] getChannelData(android.content.Context,java.lang.String) -> a
    java.lang.String getChannelXml(byte[]) -> a
    java.lang.String getChannelId(android.content.Context) -> getChannelId
com.cooee.shell.sdk.CooeeLog -> com.cooee.shell.sdk.e:
    int mLevel -> a
    void v(java.lang.String) -> v
    void v(java.lang.String,java.lang.String) -> v
    void d(java.lang.String) -> d
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String) -> i
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String) -> w
    void w(java.lang.String,java.lang.String) -> w
    void e(java.lang.String) -> e
    void e(java.lang.String,java.lang.String) -> e
    boolean isLevelPrint(int) -> a
    int getLevel() -> a
com.cooee.shell.sdk.CooeeMiChannel -> com.cooee.shell.sdk.f:
    java.lang.String[] xccxChannelList -> a
    boolean isGet -> b
    java.lang.String mc -> c
    java.lang.String ChannelFile -> d
    java.lang.String readChannel(android.content.Context) -> a
    boolean checkChannel(android.content.Context) -> b
    java.lang.String getMiChannel(android.content.Context) -> getMiChannel
com.cooee.shell.sdk.CooeeMmChannel -> com.cooee.shell.sdk.g:
    java.lang.String getAppId(android.content.Context) -> getAppId
    java.lang.String getChannelId(android.content.Context) -> getChannelId
    java.lang.String getTag(java.lang.String,java.lang.String,android.content.Context) -> a
com.cooee.shell.sdk.CooeeSdk -> com.cooee.shell.sdk.CooeeSdk:
    java.lang.String SDK_VERSION -> SDK_VERSION
    java.lang.String GET_CONFIG_VERSION -> GET_CONFIG_VERSION
    java.lang.String CONFIGFILE_NAME -> CONFIGFILE_NAME
    java.lang.String UPDATEFILE_NAME -> UPDATEFILE_NAME
    java.lang.String KEY_RESULT_CALLBACK_ID -> KEY_RESULT_CALLBACK_ID
    android.os.Messenger sendMessenger -> sendMessenger
    boolean DEBUG -> DEBUG
    boolean mIsInitCooeeSdk -> mIsInitCooeeSdk
    java.util.List mExitCb -> mExitCb
    java.lang.String cooeeId -> a
    long getCooeeIdtime -> b
    boolean cooeeExistSDCard() -> cooeeExistSDCard
    java.lang.String cooeeGetKernelVersion() -> cooeeGetKernelVersion
    java.lang.String cooeeGetSmsSc(android.content.Context,int) -> cooeeGetSmsSc
    java.lang.String GetSimScFromSdcardById(android.content.Context,int) -> GetSimScFromSdcardById
    void SetSimScToSdcard(android.content.Context,int,java.lang.String) -> SetSimScToSdcard
    java.lang.String cooeeGetCustomVersion() -> cooeeGetCustomVersion
    long cooeeGetTotalCallTime(android.content.Context) -> cooeeGetTotalCallTime
    java.lang.String cooeeGetImsi(android.content.Context,int) -> cooeeGetImsi
    java.lang.String cooeeGetAndroidID(android.content.Context) -> cooeeGetAndroidID
    java.lang.String cooeeGetImei(android.content.Context,int) -> cooeeGetImei
    java.lang.String cooeeGetIccid(android.content.Context,int) -> cooeeGetIccid
    java.lang.String cooeeGetPhoneNumber(android.content.Context,int) -> cooeeGetPhoneNumber
    java.lang.String cooeeGetCurNetworkType(android.content.Context) -> cooeeGetCurNetworkType
    java.lang.String cooeeGetMCCMNC(android.content.Context) -> cooeeGetMCCMNC
    java.lang.String cooeeGetLAC(android.content.Context) -> cooeeGetLAC
    java.lang.String cooeeGetCID(android.content.Context) -> cooeeGetCID
    int cooeeGetLcdHeight(android.content.Context) -> cooeeGetLcdHeight
    int cooeeGetLcdWidth(android.content.Context) -> cooeeGetLcdWidth
    java.lang.String cooeeGetBuildId() -> cooeeGetBuildId
    java.lang.String cooeeGetBuildDisplay() -> cooeeGetBuildDisplay
    java.lang.String cooeeGetBuildProduct() -> cooeeGetBuildProduct
    java.lang.String cooeeGetBuildDevice() -> cooeeGetBuildDevice
    java.lang.String cooeeGetBuildBoard() -> cooeeGetBuildBoard
    java.lang.String cooeeGetBuildManufacturer() -> cooeeGetBuildManufacturer
    java.lang.String cooeeGetBuildBrand() -> cooeeGetBuildBrand
    java.lang.String cooeeGetBuildModel() -> cooeeGetBuildModel
    java.lang.String cooeeGetBuildBootloader() -> cooeeGetBuildBootloader
    java.lang.String cooeeGetBuildBaseband() -> cooeeGetBuildBaseband
    java.lang.String cooeeGetBuildHardware() -> cooeeGetBuildHardware
    java.lang.String cooeeGetSerialno() -> cooeeGetSerialno
    java.lang.String cooeeGetBuildFingerprint() -> cooeeGetBuildFingerprint
    java.lang.String cooeeGetBuildVersionRelease() -> cooeeGetBuildVersionRelease
    int cooeeGetVersionSdkInt() -> cooeeGetVersionSdkInt
    java.lang.String cooeeGetBuildTags() -> cooeeGetBuildTags
    java.lang.String cooeeGetBuildType() -> cooeeGetBuildType
    java.lang.String cooeeGetVersionIncremental() -> cooeeGetVersionIncremental
    long cooeeGetCurRunTime() -> cooeeGetCurRunTime
    long cooeeGetTotalRunTime() -> cooeeGetTotalRunTime
    int cooeeGetSmsNum(android.content.Context) -> cooeeGetSmsNum
    long cooeeGetTotalRom() -> cooeeGetTotalRom
    long cooeeGetAvailRom() -> cooeeGetAvailRom
    long cooeeGetTotalMem() -> cooeeGetTotalMem
    long cooeeGetAvailMem(android.content.Context) -> cooeeGetAvailMem
    long cooeeGetDefaultSimId(android.content.Context) -> cooeeGetDefaultSimId
    void cooeeSetDefaultSimId(android.content.Context) -> cooeeSetDefaultSimId
    java.lang.String cooeeGetCooeeId(android.content.Context) -> cooeeGetCooeeId
    java.lang.String cooeeGetProjectInfo(android.content.Context) -> cooeeGetProjectInfo
    void cooeeGetProjectXmlStr(android.content.Context,org.xmlpull.v1.XmlSerializer) -> cooeeGetProjectXmlStr
    java.lang.String cooeeGetProjectXmlStr(android.content.Context) -> cooeeGetProjectXmlStr
    byte[] getPostBufToByte(android.content.Context,java.lang.String) -> getPostBufToByte
    byte[] getPostBufToByte(android.content.Context,java.lang.String,java.lang.String,byte[]) -> getPostBufToByte
    void initCooeeSdk(android.content.Context) -> initCooeeSdk
    void startShellServiceByBootReceiver(android.content.Context) -> startShellServiceByBootReceiver
    boolean shellServiceIsStart(java.util.List,java.lang.String) -> shellServiceIsStart
    java.lang.String getRunningServicePackageName(android.content.Context,java.lang.String) -> getRunningServicePackageName
    java.lang.String getP04(android.content.Context) -> getP04
    java.lang.String getChannelId(android.content.Context) -> getChannelId
    java.lang.String getP04FromConfig(android.content.Context) -> getP04FromConfig
    java.lang.String getP04FromManifest(android.content.Context) -> getP04FromManifest
    void gotoGameActivity(android.content.Context) -> gotoGameActivity
    void appExitNotifyCooeeSdk(android.content.Context,int) -> appExitNotifyCooeeSdk
    void appExitNotifyCooeeSdk(android.app.Activity,com.cooee.shell.sdk.ExitCallback) -> appExitNotifyCooeeSdk
    void appExitNotifyCooeeSdkForResult(android.app.Activity,int) -> appExitNotifyCooeeSdkForResult
    java.lang.String getMmAppId(android.content.Context) -> getMmAppId
    java.lang.String cooeeGetPubkeyHash(android.content.Context) -> cooeeGetPubkeyHash
    com.cooee.shell.sdk.CooeeSimInfo getSim2Info(android.content.Context) -> getSim2Info
    boolean isenableNetwork() -> isenableNetwork
com.cooee.shell.sdk.CooeeSdkEx -> com.cooee.shell.sdk.h:
    java.util.List mExitCb -> a
    java.lang.String cooeeId -> b
    long getCooeeIdtime -> c
    boolean cooeeExistSDCard() -> cooeeExistSDCard
    java.lang.String cooeeGetKernelVersion() -> cooeeGetKernelVersion
    java.lang.String cooeeGetSmsSc(android.content.Context,int) -> cooeeGetSmsSc
    java.lang.String GetSimScFromSdcardById(android.content.Context,int) -> GetSimScFromSdcardById
    void SetSimScToSdcard(android.content.Context,int,java.lang.String) -> SetSimScToSdcard
    java.lang.String cooeeGetCustomVersion() -> cooeeGetCustomVersion
    long cooeeGetTotalCallTime(android.content.Context) -> cooeeGetTotalCallTime
    java.lang.String cooeeGetImsi(android.content.Context,int) -> cooeeGetImsi
    java.lang.String getImsi(android.content.Context,int) -> a
    int getDefaultSimId(android.content.Context) -> b
    int getSimSize(android.content.Context) -> c
    java.lang.String cooeeGetAndroidID(android.content.Context) -> cooeeGetAndroidID
    java.lang.String cooeeGetImei(android.content.Context,int) -> cooeeGetImei
    java.lang.String cooeeGetIccid(android.content.Context,int) -> cooeeGetIccid
    java.lang.String cooeeGetPhoneNumber(android.content.Context,int) -> cooeeGetPhoneNumber
    java.lang.String cooeeGetCurNetworkType(android.content.Context) -> cooeeGetCurNetworkType
    java.lang.String cooeeGetMCCMNC(android.content.Context) -> cooeeGetMCCMNC
    java.lang.String cooeeGetLAC(android.content.Context) -> cooeeGetLAC
    java.lang.String cooeeGetCID(android.content.Context) -> cooeeGetCID
    int cooeeGetLcdHeight(android.content.Context) -> cooeeGetLcdHeight
    int cooeeGetLcdWidth(android.content.Context) -> cooeeGetLcdWidth
    java.lang.String cooeeGetBuildId() -> cooeeGetBuildId
    java.lang.String cooeeGetBuildDisplay() -> cooeeGetBuildDisplay
    java.lang.String cooeeGetBuildProduct() -> cooeeGetBuildProduct
    java.lang.String cooeeGetBuildDevice() -> cooeeGetBuildDevice
    java.lang.String cooeeGetBuildBoard() -> cooeeGetBuildBoard
    java.lang.String cooeeGetBuildManufacturer() -> cooeeGetBuildManufacturer
    java.lang.String cooeeGetBuildBrand() -> cooeeGetBuildBrand
    java.lang.String cooeeGetBuildModel() -> cooeeGetBuildModel
    java.lang.String cooeeGetBuildBootloader() -> cooeeGetBuildBootloader
    java.lang.String cooeeGetBuildBaseband() -> cooeeGetBuildBaseband
    java.lang.String cooeeGetBuildHardware() -> cooeeGetBuildHardware
    java.lang.String cooeeGetSerialno() -> cooeeGetSerialno
    java.lang.String cooeeGetBuildFingerprint() -> cooeeGetBuildFingerprint
    java.lang.String cooeeGetBuildVersionRelease() -> cooeeGetBuildVersionRelease
    int cooeeGetVersionSdkInt() -> cooeeGetVersionSdkInt
    java.lang.String cooeeGetBuildTags() -> cooeeGetBuildTags
    java.lang.String cooeeGetBuildType() -> cooeeGetBuildType
    java.lang.String cooeeGetVersionIncremental() -> cooeeGetVersionIncremental
    long cooeeGetCurRunTime() -> cooeeGetCurRunTime
    long cooeeGetTotalRunTime() -> cooeeGetTotalRunTime
    long getTotalruntimeByFile(java.io.File) -> a
    int cooeeGetSmsNum(android.content.Context) -> cooeeGetSmsNum
    long cooeeGetTotalRom() -> cooeeGetTotalRom
    long cooeeGetAvailRom() -> cooeeGetAvailRom
    long cooeeGetTotalMem() -> cooeeGetTotalMem
    long cooeeGetAvailMem(android.content.Context) -> cooeeGetAvailMem
    long cooeeGetDefaultSimId(android.content.Context) -> cooeeGetDefaultSimId
    void cooeeSetDefaultSimId(android.content.Context) -> cooeeSetDefaultSimId
    java.lang.String cooeeGetCooeeId(android.content.Context) -> cooeeGetCooeeId
    java.lang.String subString$74d93058(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String cooeeGetProjectInfo(android.content.Context) -> cooeeGetProjectInfo
    void cooeeGetProjectXmlStr(android.content.Context,org.xmlpull.v1.XmlSerializer) -> cooeeGetProjectXmlStr
    java.lang.String cooeeGetProjectXmlStr(android.content.Context) -> cooeeGetProjectXmlStr
    byte[] getPostBufToByte(android.content.Context,java.lang.String) -> getPostBufToByte
    byte[] getPostBufToByte(android.content.Context,java.lang.String,java.lang.String,byte[]) -> getPostBufToByte
    java.lang.Object invokeJarMethod(java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Class,java.lang.Object) -> a
    void checkAM(android.content.Context) -> d
    void initCooeeSdk(android.content.Context) -> initCooeeSdk
    void startShellServiceByBootReceiver(android.content.Context) -> startShellServiceByBootReceiver
    boolean shellServiceIsStart(java.util.List,java.lang.String) -> shellServiceIsStart
    java.lang.String getRunningServicePackageName(android.content.Context,java.lang.String) -> getRunningServicePackageName
    java.lang.String getP04FromConfigXml(android.content.Context) -> e
    java.lang.String getP04FromManifestNew(android.content.Context) -> f
    java.lang.String getP04(android.content.Context) -> getP04
    java.lang.String getChannelId(android.content.Context) -> getChannelId
    java.lang.String getP04FromConfig(android.content.Context) -> getP04FromConfig
    java.lang.StringBuilder getSb(android.content.Context) -> g
    java.lang.String getStringBySb(java.lang.StringBuilder) -> a
    java.lang.String getP04FromManifest(android.content.Context) -> getP04FromManifest
    void gotoGameActivity(android.content.Context) -> gotoGameActivity
    java.lang.String getClassName(android.content.Context,java.lang.String) -> a
    void appExitNotifyCooeeSdk(android.content.Context,int) -> appExitNotifyCooeeSdk
    void appExitNotifyCooeeSdk(android.app.Activity,com.cooee.shell.sdk.ExitCallback) -> appExitNotifyCooeeSdk
    void appExitNotifyCooeeSdkForResult(android.app.Activity,int) -> appExitNotifyCooeeSdkForResult
    java.lang.String getMmAppId(android.content.Context) -> getMmAppId
    byte[] getSign(android.content.Context) -> h
    java.lang.String cooeeGetPubkeyHash(android.content.Context) -> cooeeGetPubkeyHash
    com.cooee.shell.sdk.CooeeSimInfo getSim2Info(android.content.Context) -> getSim2Info
    java.lang.String getSmsSc(android.content.Context,int) -> b
    java.lang.String getIccid(android.content.Context,int) -> c
    java.lang.String getImei(android.content.Context,int) -> d
    boolean isenableNetwork() -> isenableNetwork
    void access$000(android.content.Context) -> a
com.cooee.shell.sdk.CooeeSdkEx$1 -> com.cooee.shell.sdk.i:
    android.content.Context val$context -> a
    void run() -> run
com.cooee.shell.sdk.CooeeSimInfo -> com.cooee.shell.sdk.j:
    int state1 -> a
    int state2 -> b
    java.lang.String imsi -> c
    java.lang.String imei -> d
    java.lang.String iccid -> e
    java.lang.String smssc -> f
    int getState1() -> getState1
    void setState1(int) -> setState1
    int getState2() -> getState2
    void setState2(int) -> setState2
    java.lang.String getImsi() -> getImsi
    void setImsi(java.lang.String) -> setImsi
    java.lang.String getImei() -> getImei
    void setImei(java.lang.String) -> setImei
    java.lang.String getIccid() -> getIccid
    void setIccid(java.lang.String) -> setIccid
    java.lang.String getSmssc() -> getSmssc
    void setSmssc(java.lang.String) -> setSmssc
com.cooee.shell.sdk.ExceptionLog -> com.cooee.shell.sdk.k:
    void writeShellExceptionToXml(java.lang.Throwable,android.content.Context,java.lang.String) -> writeShellExceptionToXml
    void writeExceptionToXml(java.lang.Throwable,android.content.Context,java.lang.String,java.lang.String) -> writeExceptionToXml
    java.lang.String getExceptionXmlStr() -> getExceptionXmlStr
    void delExceptionXml() -> delExceptionXml
    boolean hasExceptionXml() -> hasExceptionXml
    void writeExceptionTime(int) -> writeExceptionTime
    int getExceptionTime() -> getExceptionTime
    void writeExceptionToFile(java.lang.Throwable) -> writeExceptionToFile
    void writeShellUpdateExceptionFile(android.content.Context,java.lang.String) -> writeShellUpdateExceptionFile
    java.lang.String getShellUpdateExceptionStr(android.content.Context) -> getShellUpdateExceptionStr
    void delShellUpdateExceptionFile(android.content.Context) -> delShellUpdateExceptionFile
com.cooee.shell.sdk.ExitCallback -> com.cooee.shell.sdk.l:
    int i -> a
    int id -> b
    android.os.Bundle params -> c
    void onExit(int) -> onExit
    int getId() -> getId
    android.os.Bundle getExtra() -> getExtra
    void setExtra(android.os.Bundle) -> setExtra
com.cooee.shell.sdk.FileUtils -> com.cooee.shell.sdk.m:
    void delFile(android.content.Context,java.lang.String) -> delFile
    java.io.File getReadFile(android.content.Context,java.lang.String) -> getReadFile
    byte[] getFileBytes(android.content.Context,java.lang.String) -> getFileBytes
    boolean write(android.content.Context,java.lang.String,byte[]) -> write
    int write1(android.content.Context,java.lang.String,byte[]) -> write1
    boolean copyFile(java.lang.String,java.lang.String) -> copyFile
    void writeSingleFile(java.lang.String,byte[]) -> writeSingleFile
    byte[] getSingleFileBytes(java.lang.String) -> getSingleFileBytes
com.cooee.shell.sdk.InvokeKpsh -> com.cooee.shell.sdk.n:
    void initSdk(android.content.Context) -> initSdk
    void AppExitNotifyKpsh(android.content.Context) -> AppExitNotifyKpsh
com.cooee.shell.sdk.JarFileUtils -> com.cooee.shell.sdk.o:
    java.lang.String SHELL_JAR_NAME -> a
    java.lang.String PAY_JAR_NAME -> b
    java.lang.String SDK_JAR_DIR -> c
    void copyAllJarsAndCheckAppVersion(android.content.Context) -> copyAllJarsAndCheckAppVersion
    void copyAllJarsAndCheckVersion(android.content.Context) -> copyAllJarsAndCheckVersion
    boolean copyShellJarAndCheckVersion(android.content.Context,boolean) -> copyShellJarAndCheckVersion
    boolean copyShellJarAndCheckVersion(android.content.Context) -> copyShellJarAndCheckVersion
    boolean copyJarAndCheckVersion(android.content.Context,java.lang.String,boolean) -> copyJarAndCheckVersion
    boolean copyFileToFile(java.io.File,java.io.File) -> copyFileToFile
    boolean checkFileToFile(java.io.File,java.io.File) -> a
    void deleteFile(java.io.File) -> a
    void closeInAndOut(java.io.FileInputStream,java.io.FileOutputStream) -> a
    boolean copyShellJarFrommAssetsToPrivate(android.content.Context) -> copyShellJarFrommAssetsToPrivate
    boolean copyFileFromAssetsToPrivate(android.content.Context,java.lang.String,java.io.File) -> copyFileFromAssetsToPrivate
    boolean copyAssetsToFile(android.content.Context,java.lang.String,java.io.File) -> copyAssetsToFile
    int compareFileVersion(android.content.Context,java.io.File,java.io.File) -> compareFileVersion
    java.lang.String getVerByFile(java.io.File,android.content.Context) -> a
    void deleteDexFile(java.lang.String) -> deleteDexFile
    boolean isAppUpdated(android.content.Context) -> isAppUpdated
    boolean isFileLegal(java.io.File) -> isFileLegal
    boolean createNewFile(java.io.File) -> createNewFile
    void createFileNeedDir(java.io.File) -> createFileNeedDir
    java.io.File getShellPrivateFile(android.content.Context) -> getShellPrivateFile
    java.io.File getSdcardFile(java.lang.String) -> getSdcardFile
    java.io.File getPrivateFile(android.content.Context,java.lang.String) -> getPrivateFile
    java.lang.String getJarVersion(android.content.Context,java.lang.String) -> getJarVersion
    int getPrivateJarVersionCode(android.content.Context,java.lang.String) -> getPrivateJarVersionCode
    java.lang.String getPrivateJarVersion(android.content.Context,java.lang.String) -> getPrivateJarVersion
    java.lang.String getPrivateShellJarVersion(android.content.Context) -> getPrivateShellJarVersion
    java.lang.String getPrivatePayJarVersion(android.content.Context) -> getPrivatePayJarVersion
    java.lang.String getPrivateDownloadJarVersion(android.content.Context) -> getPrivateDownloadJarVersion
com.cooee.shell.sdk.SdkClassUtils -> com.cooee.shell.sdk.p:
    java.lang.String getShellServiceHullClassName() -> getShellServiceHullClassName
    java.lang.String getPayServiceHullClassName() -> getPayServiceHullClassName
    java.lang.String getShellActivityHullClassName() -> getShellActivityHullClassName
    java.lang.String getPayActivityHullClassName() -> getPayActivityHullClassName
    java.lang.String getDownloadActivityHullClassName() -> getDownloadActivityHullClassName
    java.lang.String getShellReceiverHullClassName() -> getShellReceiverHullClassName
com.cooee.shell.sdk.SdkPathUtils -> com.cooee.shell.sdk.q:
    java.lang.String GET_SHELL_MODULE() -> GET_SHELL_MODULE
    java.lang.String GET_PAY_MODULE() -> GET_PAY_MODULE
    java.lang.String GET_SDK_DIR() -> GET_SDK_DIR
    java.lang.String GET_MODULE_DIR() -> GET_MODULE_DIR
    java.lang.String GET_SHELL_DIR() -> GET_SHELL_DIR
    java.lang.String GET_PAY_DIR() -> GET_PAY_DIR
    java.lang.String GET_DOWNLOAD_DIR() -> GET_DOWNLOAD_DIR
    java.lang.String getSdkSdcardDir() -> getSdkSdcardDir
    java.lang.String getModuleSdcardDir() -> getModuleSdcardDir
    java.lang.String getModulePrivateDir(android.content.Context) -> getModulePrivateDir
    java.lang.String getModuleDir(android.content.Context) -> getModuleDir
    java.lang.String getShellJarSdcardPath() -> getShellJarSdcardPath
    java.lang.String getShellJarPrivatePath(android.content.Context) -> getShellJarPrivatePath
    java.lang.String getShellJarPath(android.content.Context) -> getShellJarPath
    java.lang.String getPayJarSdcardPath() -> getPayJarSdcardPath
    java.lang.String getShellPrivateDir(android.content.Context) -> getShellPrivateDir
    java.lang.String getShellSdcardDir() -> getShellSdcardDir
    java.lang.String getShellDir(android.content.Context) -> getShellDir
    java.lang.String getPayPrivateDir(android.content.Context) -> getPayPrivateDir
    java.lang.String getPaySdcardDir() -> getPaySdcardDir
    java.lang.String getPayDir(android.content.Context) -> getPayDir
    void createJarSdcardDir() -> createJarSdcardDir
    void createJarPrivateDir(android.content.Context) -> createJarPrivateDir
    void createJarDir(android.content.Context) -> createJarDir
com.cooee.shell.shell.SdkActivityHullV5 -> com.cooee.shell.shell.SdkActivityHullV5:
    java.lang.String STRING_NAME -> a
    int mCompatState -> b
    java.lang.Class ActivityClass -> c
    java.lang.Object instance -> d
    int callbackId -> e
    com.cooee.shell.shell.SdkActivityHullV5$ResultCallBackStub cbStub -> f
    boolean isCallbackLay() -> a
    com.cooee.shell.sdk.ExitCallback getCallbackById(int) -> b
    void onCreate(android.os.Bundle) -> onCreate
    void handleInvokeException(java.lang.Exception) -> a
    boolean initInstance(java.io.File,android.content.pm.PackageInfo) -> a
    void invokeJarMethod(java.lang.String,java.lang.Class[],java.lang.Object[]) -> invokeJarMethod
    void onStart() -> onStart
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onBackPressed() -> onBackPressed
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    int access$000(com.cooee.shell.shell.SdkActivityHullV5) -> a
    com.cooee.shell.sdk.ExitCallback access$100(int) -> a
com.cooee.shell.shell.SdkActivityHullV5$ResultCallBackStub -> com.cooee.shell.shell.a:
    com.cooee.shell.shell.SdkActivityHullV5 this$0 -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onStop() -> onStop
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onBackPressed() -> onBackPressed
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onRestart() -> onRestart
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDestroy() -> onDestroy
com.cooee.shell.shell.SdkReceiverHullV5 -> com.cooee.shell.shell.SdkReceiverHullV5:
    java.lang.Object receiverInstance -> a
    boolean isNetWorkAvailable(android.content.Context) -> isNetWorkAvailable
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean loadRIntance(android.content.Context,java.lang.String,java.lang.String) -> a
    android.telephony.TelephonyManager access$000$33822b40(android.content.Context) -> a
    void access$100(com.cooee.shell.shell.SdkReceiverHullV5,android.content.Context,android.content.Intent) -> a
com.cooee.shell.shell.SdkReceiverHullV5$ReceiverImpl -> com.cooee.shell.shell.b:
    android.content.Context context -> a
    android.content.Intent intent -> b
    com.cooee.shell.shell.SdkReceiverHullV5 this$0 -> c
    void run() -> run
com.cooee.shell.shell.SdkServiceHullV5 -> com.cooee.shell.shell.SdkServiceHullV5:
    java.lang.Class serviceClass -> a
    java.lang.Object serviceInstance -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    java.lang.Object invokeServiceMethod(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
com.cooee.statistics.CustomerHttpClientNew -> com.cooee.statistics.CustomerHttpClientNew:
    java.lang.String CHARSET -> CHARSET
    org.apache.http.client.HttpClient customerHttpClient -> customerHttpClient
    android.content.Context context -> context
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    java.lang.String[] post(java.lang.String,java.lang.String,android.content.Context) -> post
    boolean isNetworkAvailable(android.content.Context) -> isNetworkAvailable
com.cooee.statistics.StaticClassNew -> com.cooee.statistics.StaticClassNew:
    int DATANUM -> DATANUM
    int DELAY -> DELAY
com.cooee.statistics.StatisticsBaseNew -> com.cooee.statistics.StatisticsBaseNew:
    boolean enable_Statistics_LOG -> enable_Statistics_LOG
    android.content.Context mContext -> mContext
    java.lang.String CUSTOM_ACTION -> CUSTOM_ACTION
    java.lang.String LOG_URL -> LOG_URL
    java.lang.String LOG_URL_TEST -> LOG_URL_TEST
    java.lang.String CUSTOM_LOG_URL -> CUSTOM_LOG_URL
    java.lang.String CUSTOM_LOG_URL_TEST -> CUSTOM_LOG_URL_TEST
    java.lang.String DEFAULT_KEY -> DEFAULT_KEY
    java.lang.String DEFAULT_ERRTIME -> DEFAULT_ERRTIME
    java.lang.String ERRTIME -> ERRTIME
    java.lang.String ERRCOUNT -> ERRCOUNT
    java.lang.String SUCCESSTIME -> SUCCESSTIME
    java.lang.String errtime -> errtime
    java.util.ArrayList idSet -> idSet
    boolean isTestUrl -> isTestUrl
    java.lang.String TAG -> TAG
    java.lang.String PATH_ENABLE_LOG -> PATH_ENABLE_LOG
    android.content.SharedPreferences preferences -> preferences
    java.lang.String ACTION_REGISTER -> ACTION_REGISTER
    java.lang.String ACTION_DAILY_ATTENDANCE -> ACTION_DAILY_ATTENDANCE
    java.lang.String ACTION_USE -> ACTION_USE
    java.lang.String ACTION_START_UP -> ACTION_START_UP
    java.lang.String ACTION_CONFIG_UPDATE -> ACTION_CONFIG_UPDATE
    java.lang.String ACTION_START_DOWNLOAD -> ACTION_START_DOWNLOAD
    java.lang.String ACTION_INSTALL -> ACTION_INSTALL
    java.lang.String ACTION_DEFAULT_THEME_REGISTER -> ACTION_DEFAULT_THEME_REGISTER
    java.lang.String ACTION_DEFAULT_THEME_USE -> ACTION_DEFAULT_THEME_USE
    java.lang.String ACTION_DEFAULT_THEME_CHANGE -> ACTION_DEFAULT_THEME_CHANGE
    java.lang.String ACTION_CUSTOM -> ACTION_CUSTOM
    java.lang.String PREFERENCE_KEY -> PREFERENCE_KEY
    java.lang.String NEXT_0011_TIME_KEY -> NEXT_0011_TIME_KEY
    java.lang.String IMSI -> IMSI
    java.lang.String default_theme_register -> default_theme_register
    java.lang.String default_theme_change -> default_theme_change
    java.lang.String register_id -> register_id
    android.app.Service service -> service
    android.os.HandlerThread handlerThread -> handlerThread
    android.os.Handler mHandler -> mHandler
    java.lang.Object threadSync -> threadSync
    java.lang.Runnable UploadRun -> UploadRun
    char[] hexDigits -> hexDigits
    void onEvent(android.content.Context,java.lang.String,java.lang.String,boolean) -> onEvent
    void packageOnEvent(android.app.Service,java.lang.String,java.lang.String,boolean) -> packageOnEvent
    boolean ErrTimeTransfinite(com.cooee.statistics.StatisticsBaseNew$TYPE) -> ErrTimeTransfinite
    boolean SuccessTimeTransfinite() -> SuccessTimeTransfinite
    void checkThread() -> checkThread
    void exitThread() -> exitThread
    java.lang.String getCurProcessName(android.content.Context) -> getCurProcessName
    void setApplicationContext(android.content.Context) -> setApplicationContext
    java.lang.String getSDPath() -> getSDPath
    void packageSetAppContext(android.content.Context) -> packageSetAppContext
    android.content.Context getApplicationContext() -> getApplicationContext
    boolean uploadCustomLog() -> uploadCustomLog
    boolean exitErrTime() -> exitErrTime
    void clearErrTimeAndCount() -> clearErrTimeAndCount
    void recordErrTime() -> recordErrTime
    void recordSuccessTime() -> recordSuccessTime
    void recordErrCount(int) -> recordErrCount
    void delAllData() -> delAllData
    int getErrTimes() -> getErrTimes
    boolean IsHaveInternet(android.content.Context) -> IsHaveInternet
    java.lang.String getLogInformation() -> getLogInformation
    java.lang.String getCustomLogInformation(java.util.ArrayList) -> getCustomLogInformation
    java.lang.String getCurTime() -> getCurTime
    java.lang.String getParams(java.lang.String,java.lang.String,int,java.lang.String) -> getParams
    java.lang.String getParams(java.lang.String,boolean) -> getParams
    java.lang.String getMyUUID(android.content.Context) -> getMyUUID
    java.lang.String getMD5EncruptKey(java.lang.String) -> getMD5EncruptKey
    java.lang.String bufferToHex(byte[]) -> bufferToHex
    java.lang.String bufferToHex(byte[],int,int) -> bufferToHex
    void appendHexPair(byte,java.lang.StringBuffer) -> appendHexPair
    java.lang.String getParams0017NoMd5(java.lang.String) -> getParams0017NoMd5
    java.lang.String getParams0017List(java.lang.String,java.lang.String) -> getParams0017List
    java.lang.String getParams0017WithMd5(java.lang.String,java.lang.String) -> getParams0017WithMd5
    boolean isNeedLog(android.content.Context,java.lang.String,java.lang.String) -> isNeedLog
    void setNextLog0011Time(java.lang.String) -> setNextLog0011Time
    java.lang.String md5Picture(android.content.Context,java.lang.String) -> md5Picture
    android.os.Handler access$0() -> access$0
    java.lang.Runnable access$1() -> access$1
    android.content.Context access$2() -> access$2
    boolean access$3(android.content.Context) -> access$3
    void access$4() -> access$4
    boolean access$5() -> access$5
    java.lang.String access$6() -> access$6
    java.lang.String access$7() -> access$7
    java.lang.String access$8() -> access$8
    java.util.ArrayList access$9() -> access$9
    void access$10(java.lang.String) -> access$10
    java.lang.String access$11() -> access$11
    void access$12(java.lang.String) -> access$12
    java.lang.String access$13() -> access$13
    void access$14(java.lang.String) -> access$14
    void access$15() -> access$15
    void access$16() -> access$16
    void access$17() -> access$17
    int access$18() -> access$18
    void access$19(int) -> access$19
    void access$20() -> access$20
com.cooee.statistics.StatisticsBaseNew$1 -> com.cooee.statistics.StatisticsBaseNew$1:
    void run() -> run
com.cooee.statistics.StatisticsBaseNew$TYPE -> com.cooee.statistics.StatisticsBaseNew$TYPE:
    com.cooee.statistics.StatisticsBaseNew$TYPE RETRYINTERVAL -> RETRYINTERVAL
    com.cooee.statistics.StatisticsBaseNew$TYPE ONEDAYINTERVAL -> ONEDAYINTERVAL
    com.cooee.statistics.StatisticsBaseNew$TYPE[] ENUM$VALUES -> ENUM$VALUES
    com.cooee.statistics.StatisticsBaseNew$TYPE[] values() -> values
    com.cooee.statistics.StatisticsBaseNew$TYPE valueOf(java.lang.String) -> valueOf
com.cooee.statistics.StatisticsExpandNew -> com.cooee.statistics.StatisticsExpandNew:
    java.lang.String CONFIG_FILE_NAME -> CONFIG_FILE_NAME
    java.lang.String readTextFile(java.io.InputStream) -> readTextFile
    com.cooee.statistics.StatisticsExpandNew$AppidAndSn procSNandAppid(android.content.Context,java.lang.String) -> procSNandAppid
    com.cooee.statistics.StatisticsExpandNew$AppidAndSn procSNandAppid(android.content.Context,int,java.lang.String) -> procSNandAppid
    void register(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,boolean) -> register
    void register(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> register
    void register(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> register
    void register(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,boolean) -> register
    void dailyAttendance(android.content.Context,int,java.lang.String,java.lang.String) -> dailyAttendance
    void use(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,boolean) -> use
    void use(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> use
    void use(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> use
    void use(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,boolean) -> use
    void startUp(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,boolean) -> startUp
    void startUp(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> startUp
    void startUp(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> startUp
    void startUp(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,boolean) -> startUp
    void configUpdate(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,boolean) -> configUpdate
    void configUpdate(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> configUpdate
    void startDownload(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> startDownload
    void startDownload(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> startDownload
    void install(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> install
    void install(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> install
    void register_default_theme(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,boolean,boolean) -> register_default_theme
    void register_default_theme(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,boolean) -> register_default_theme
    void useDefaultTheme(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,boolean) -> useDefaultTheme
    void useDefaultTheme(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> useDefaultTheme
    void onCustomEvent(android.content.Context,java.lang.String,int,java.lang.String) -> onCustomEvent
    void onCustomEvent(android.content.Context,java.lang.String,int,java.lang.String,org.json.JSONObject) -> onCustomEvent
    void onCustomEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String) -> onCustomEvent
    void onCustomEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,org.json.JSONObject) -> onCustomEvent
    void onCustomEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,org.json.JSONObject) -> onCustomEvent
    void setStatiisticsLogEnable(boolean) -> setStatiisticsLogEnable
    void setTestURL() -> setTestURL
    java.lang.String md5Picture(android.content.Context,java.lang.String) -> md5Picture
    boolean allowStatistic(android.content.Context) -> allowStatistic
com.cooee.statistics.StatisticsExpandNew$AppidAndSn -> com.cooee.statistics.StatisticsExpandNew$AppidAndSn:
    java.lang.String sn -> sn
    java.lang.String appid -> appid
    java.lang.String getSn() -> getSn
    void setSn(java.lang.String) -> setSn
    java.lang.String getAppid() -> getAppid
    void setAppid(java.lang.String) -> setAppid
com.cooee.statistics.StatisticsServiceNew -> com.cooee.statistics.StatisticsServiceNew:
    java.lang.String EXTRA_EVENT_ID -> EXTRA_EVENT_ID
    java.lang.String EXTRA_PARAMS -> EXTRA_PARAMS
    java.lang.String EXTRA_ENABLE_SEND -> EXTRA_ENABLE_SEND
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void handleCommand(android.content.Intent) -> handleCommand
com.cooee.statistics.StatisticsSignReciever -> com.cooee.statistics.StatisticsSignReciever:
    boolean isRunning -> isRunning
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cooee.statistics.StatisticsSignReciever$1 -> com.cooee.statistics.StatisticsSignReciever$1:
    com.cooee.statistics.StatisticsSignReciever this$0 -> this$0
    android.content.Context val$context -> val$context
    void run() -> run
com.cooee.statistics.StatisticsUtil -> com.cooee.statistics.StatisticsUtil:
    java.lang.String cooeeGetIccid(android.content.Context,int) -> cooeeGetIccid
    java.lang.String getIccid(android.content.Context) -> getIccid
    java.lang.Object invokeJarMethod(java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Class,java.lang.Object) -> invokeJarMethod
com.cooee.statistics.databaseNew.ConfigDBNew -> com.cooee.statistics.databaseNew.ConfigDBNew:
    java.lang.String KEY_NAME -> KEY_NAME
    java.lang.String KEY_VALUE -> KEY_VALUE
    java.lang.String DATABASE_TABLE -> DATABASE_TABLE
    java.lang.String DEFAULT_ERRTIME -> DEFAULT_ERRTIME
    java.lang.String ERRTIME -> ERRTIME
    java.lang.String ERRCOUNT -> ERRCOUNT
    android.content.Context context -> context
    com.cooee.statistics.databaseNew.DatabaseHelperNew DBHelper -> DBHelper
    android.database.sqlite.SQLiteDatabase db -> db
    java.lang.String getCreateSql() -> getCreateSql
    java.lang.String getDropSql() -> getDropSql
    void initconfdb() -> initconfdb
    com.cooee.statistics.databaseNew.ConfigDBNew open() -> open
    void close() -> close
    long insertTitle(java.lang.String,java.lang.String) -> insertTitle
    boolean deleteTitle(java.lang.String) -> deleteTitle
    android.database.Cursor getAllTitles() -> getAllTitles
    android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    java.lang.String getTitle(java.lang.String) -> getTitle
    boolean updateTitle(java.lang.String,java.lang.String) -> updateTitle
com.cooee.statistics.databaseNew.CustomJournalDB -> com.cooee.statistics.databaseNew.CustomJournalDB:
    java.lang.String KEY_ID -> KEY_ID
    java.lang.String KEY_EVENT -> KEY_EVENT
    java.lang.String KEY_LOGTEXT -> KEY_LOGTEXT
    java.lang.String KEY_COUNT -> KEY_COUNT
    java.lang.String KEY_APPEND -> KEY_APPEND
    java.lang.String KEY_UPLOADTIME -> KEY_UPLOADTIME
    java.lang.String DATABASE_TABLE -> DATABASE_TABLE
    android.content.Context context -> context
    com.cooee.statistics.databaseNew.DatabaseHelperNew DBHelper -> DBHelper
    android.database.sqlite.SQLiteDatabase db -> db
    java.lang.String getCreateSql() -> getCreateSql
    java.lang.String getDropSql() -> getDropSql
    com.cooee.statistics.databaseNew.CustomJournalDB open() -> open
    void close() -> close
    long insertAllInfo(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> insertAllInfo
    boolean deleteTitle(long) -> deleteTitle
    android.database.Cursor getAllTitles() -> getAllTitles
    boolean updateCount(long,int) -> updateCount
    boolean updateAllInfo(long,int,java.lang.String) -> updateAllInfo
    java.lang.String getCurTime() -> getCurTime
com.cooee.statistics.databaseNew.DatabaseHelperNew -> com.cooee.statistics.databaseNew.DatabaseHelperNew:
    java.lang.String DATABASE_NAME -> DATABASE_NAME
    int DATABASE_VERSION -> DATABASE_VERSION
    java.lang.String DATABASE_TABLE -> DATABASE_TABLE
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.cooee.statistics.databaseNew.JournalDBNew -> com.cooee.statistics.databaseNew.JournalDBNew:
    java.lang.String KEY_ID -> KEY_ID
    java.lang.String KEY_LOGTEXT -> KEY_LOGTEXT
    java.lang.String KEY_UPLOADTIME -> KEY_UPLOADTIME
    java.lang.String DATABASE_TABLE -> DATABASE_TABLE
    android.content.Context context -> context
    com.cooee.statistics.databaseNew.DatabaseHelperNew DBHelper -> DBHelper
    android.database.sqlite.SQLiteDatabase db -> db
    java.lang.String getCreateSql() -> getCreateSql
    java.lang.String getDropSql() -> getDropSql
    com.cooee.statistics.databaseNew.JournalDBNew open() -> open
    void close() -> close
    long insertTitle(java.lang.String) -> insertTitle
    long insertAllInfo(java.lang.String,java.lang.String) -> insertAllInfo
    boolean deleteTitle(long) -> deleteTitle
    android.database.Cursor getAllTitles() -> getAllTitles
    boolean updateTitle(long,java.lang.String) -> updateTitle
    boolean updateAllInfo(long,java.lang.String,java.lang.String) -> updateAllInfo
    java.lang.String getCurTime() -> getCurTime
com.cooee.weather.clientdocking.ContentProviderUtil -> com.cooee.a.a.a:
    java.lang.String getSelectedCity(android.content.Context) -> getSelectedCity
com.cooee.weather.clientdocking.ContentProviderUtil2345 -> com.cooee.a.a.b:
    java.util.ArrayList getCityList(android.content.Context) -> a
    int getSelectedCity(android.content.Context) -> b
    java.lang.String getSelectedCityName(android.content.Context) -> getSelectedCityName
com.cooee.weather.clientdocking.ContentProviderUtil2345$CityEntity2345 -> com.cooee.a.a.c:
    int areaId -> a
    java.lang.String areaName -> b
    java.lang.String international -> c
    int getAreaId() -> getAreaId
    void setAreaId(int) -> setAreaId
    java.lang.String getAreaName() -> getAreaName
    void setAreaName(java.lang.String) -> setAreaName
    void setInternational(java.lang.String) -> setInternational
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.cooee.weather.clientdocking.WeatherEntity -> com.cooee.a.a.d:
    java.lang.String[] projection -> a
    java.util.ArrayList details -> c
    java.lang.Integer id -> d
    java.lang.Integer updateMilis -> e
    java.lang.String city -> f
    java.lang.String postalCode -> g
    java.lang.Long forecastDate -> h
    java.lang.String condition -> i
    java.lang.Integer tempF -> j
    java.lang.Integer tempC -> k
    java.lang.String humidity -> l
    java.lang.String icon -> m
    java.lang.String windCondition -> n
    java.lang.Long lastUpdateTime -> o
    java.lang.Integer isConfigured -> p
    java.lang.Integer tempH -> q
    java.lang.Integer tempL -> r
    java.lang.String weather_index -> b
    void setTestData() -> setTestData
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.Integer getUpdateMilis() -> getUpdateMilis
    void setUpdateMilis(java.lang.Integer) -> setUpdateMilis
    java.util.ArrayList getDetails() -> getDetails
    void setDetails(java.util.ArrayList) -> setDetails
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getPostalCode() -> getPostalCode
    void setPostalCode(java.lang.String) -> setPostalCode
    java.lang.String getCondition() -> getCondition
    void setCondition(java.lang.String) -> setCondition
    java.lang.Integer getTempF() -> getTempF
    void setTempF(java.lang.Integer) -> setTempF
    java.lang.Integer getTempC() -> getTempC
    void setTempC(java.lang.Integer) -> setTempC
    java.lang.String getHumidity() -> getHumidity
    void setHumidity(java.lang.String) -> setHumidity
    java.lang.String getIcon() -> getIcon
    void setIcon(java.lang.String) -> setIcon
    java.lang.String getWindCondition() -> getWindCondition
    void setWindCondition(java.lang.String) -> setWindCondition
    void setIsConfigured(java.lang.Integer) -> setIsConfigured
    java.lang.Integer getIsConfigured() -> getIsConfigured
    void setForecastDate(java.lang.Long) -> setForecastDate
    java.lang.Long getForecastDate() -> getForecastDate
    void setLastUpdateTime(java.lang.Long) -> setLastUpdateTime
    java.lang.Long getLastUpdateTime() -> getLastUpdateTime
    java.lang.Integer getTempH() -> getTempH
    void setTempH(java.lang.Integer) -> setTempH
    java.lang.Integer getTempL() -> getTempL
    void setTempL(java.lang.Integer) -> setTempL
    java.lang.String getWeather_index() -> getWeather_index
    void setWeather_index(java.lang.String) -> setWeather_index
    boolean equals(java.lang.Object) -> equals
    boolean ifTwoObjsEqual(java.lang.Object,java.lang.Object) -> a
com.cooee.weather.clientdocking.WeatherForecastEntity -> com.cooee.a.a.e:
    java.lang.String[] forecastProjection -> a
    java.lang.Integer id -> b
    java.lang.String city -> c
    java.lang.Integer dayOfWeek -> d
    java.lang.Integer low -> e
    java.lang.Integer hight -> f
    java.lang.String icon -> g
    java.lang.String condition -> h
    java.lang.Integer widgetId -> i
    void setTestData() -> setTestData
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.Integer getDayOfWeek() -> getDayOfWeek
    void setDayOfWeek(java.lang.Integer) -> setDayOfWeek
    java.lang.Integer getLow() -> getLow
    void setLow(java.lang.Integer) -> setLow
    java.lang.Integer getHight() -> getHight
    void setHight(java.lang.Integer) -> setHight
    java.lang.String getIcon() -> getIcon
    void setIcon(java.lang.String) -> setIcon
    java.lang.String getCondition() -> getCondition
    void setCondition(java.lang.String) -> setCondition
    void setWidgetId(java.lang.Integer) -> setWidgetId
    java.lang.Integer getWidgetId() -> getWidgetId
    java.lang.String getDstailCity() -> getDstailCity
    void setDetailCity(java.lang.String) -> setDetailCity
com.cooee.weather.clientdocking.WeatherUtils -> com.cooee.a.a.f:
    void saveWeatherData(android.content.Context,com.cooee.weather.clientdocking.WeatherEntity) -> saveWeatherData
    com.cooee.weather.clientdocking.WeatherEntity getWeatherInfo(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,int,int) -> getWeatherInfo
    com.cooee.weather.clientdocking.WeatherEntity receiveWeatherInfo(android.content.Context,android.content.Intent,java.lang.String) -> receiveWeatherInfo
    boolean isWeatherAtapterInstall(android.content.Context,java.lang.String) -> isWeatherAtapterInstall
com.cooee.widgetnative.enjoy.DownloadActivity -> com.cooee.widgetnative.enjoy.DownloadActivity:
    void onCreate(android.os.Bundle) -> onCreate
    android.graphics.drawable.Drawable getAppIconDrawableByPkgName(android.content.Context,java.lang.String) -> getAppIconDrawableByPkgName
    void onClick(android.view.View) -> onClick
com.cooee.widgetnative.enjoy.DownloadActivity$1 -> com.cooee.widgetnative.enjoy.a:
    com.cooee.widgetnative.enjoy.DownloadActivity this$0 -> a
    void setProxy(java.lang.Object) -> setProxy
    void onDownloadSuccess() -> onDownloadSuccess
    void onDownloadFail() -> onDownloadFail
    void onDownloadProgress(int) -> onDownloadProgress
    void onInstallSuccess(java.lang.String) -> onInstallSuccess
    void showMessage(java.lang.String) -> showMessage
com.cooee.widgetnative.enjoy.ReStartBroadcast -> com.cooee.widgetnative.enjoy.ReStartBroadcast:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cooee.widgetnative.enjoy.WidgetProvider -> com.cooee.widgetnative.enjoy.WidgetProvider:
    java.lang.String TAG -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onEnabled(android.content.Context) -> onEnabled
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void onDisabled(android.content.Context) -> onDisabled
com.cooee.widgetnative.enjoy.common.BitmapUtils -> com.cooee.widgetnative.enjoy.a.a:
    android.graphics.Bitmap adaptive(android.graphics.Bitmap,float,float) -> adaptive
    android.graphics.Bitmap onCompositeImages(android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap) -> onCompositeImages
    void saveMyBitmap(java.lang.String,android.graphics.Bitmap) -> saveMyBitmap
com.cooee.widgetnative.enjoy.common.WeatherIMG -> com.cooee.widgetnative.enjoy.a.b:
    int matchingWeather(java.lang.String) -> matchingWeather
com.cooee.widgetnative.enjoy.manager.ClockManager -> com.cooee.widgetnative.enjoy.b.a:
    com.cooee.widgetnative.enjoy.manager.ClockManager mClockManager -> a
    android.content.Context mContext -> b
    boolean showClockVeiw -> c
    java.lang.String default_clock_package -> d
    java.util.HashMap item -> e
    java.util.List pagList -> f
    int mCurrentHour -> g
    int mCurrentMinute -> h
    int[] timeNumbers -> i
    com.cooee.widgetnative.enjoy.manager.ClockManager getInstance(android.content.Context) -> getInstance
    void initClickView(android.widget.RemoteViews) -> initClickView
    void onClick() -> onClick
    void updateAllWidget(android.widget.RemoteViews) -> updateAllWidget
    boolean isShowClockVeiw() -> isShowClockVeiw
com.cooee.widgetnative.enjoy.manager.ClockManager$PInfo -> com.cooee.widgetnative.enjoy.b.b:
    java.lang.String appname -> b
    java.lang.String pname -> c
    java.lang.String versionName -> d
    int versionCode -> e
    com.cooee.widgetnative.enjoy.manager.ClockManager this$0 -> a
    void access$0(com.cooee.widgetnative.enjoy.manager.ClockManager$PInfo,java.lang.String) -> a
    void access$1(com.cooee.widgetnative.enjoy.manager.ClockManager$PInfo,java.lang.String) -> b
    void access$2(com.cooee.widgetnative.enjoy.manager.ClockManager$PInfo,java.lang.String) -> c
    void access$3(com.cooee.widgetnative.enjoy.manager.ClockManager$PInfo,int) -> a
    void access$4(com.cooee.widgetnative.enjoy.manager.ClockManager$PInfo) -> a
    java.lang.String access$5(com.cooee.widgetnative.enjoy.manager.ClockManager$PInfo) -> b
    java.lang.String access$6(com.cooee.widgetnative.enjoy.manager.ClockManager$PInfo) -> c
com.cooee.widgetnative.enjoy.manager.MusicManager -> com.cooee.widgetnative.enjoy.b.c:
    com.cooee.widgetnative.enjoy.manager.MusicManager mMusicManager -> b
    android.content.Context mContext -> c
    boolean showMusicVeiw -> d
    android.graphics.Bitmap roundWhiteBitmap -> e
    android.graphics.Bitmap roundBlackBitmap -> f
    android.graphics.Bitmap defaultBitmap -> g
    android.graphics.Bitmap compositeDefaultBitmap -> h
    android.graphics.Bitmap currentBitmap -> a
    int WIDGET_WIDTH -> i
    int WIDGET_HEIGHT -> j
    boolean isPlaying -> k
    java.lang.String musicName -> l
    java.lang.String musicSinger -> m
    com.cooee.widgetnative.enjoy.manager.MusicManager getInstance(android.content.Context) -> getInstance
    void initClickView(android.widget.RemoteViews) -> initClickView
    void changeMusicWidgetView(android.content.Intent) -> changeMusicWidgetView
    void setSongInfo(android.content.Intent) -> setSongInfo
    android.graphics.Bitmap getArtwork(android.content.Intent) -> a
    android.graphics.Bitmap getCompositeBitmap(android.graphics.Bitmap) -> a
    void setPlayingState(android.content.Context,android.content.Intent) -> setPlayingState
    void updateAllWidget(android.widget.RemoteViews) -> updateAllWidget
    boolean isShowMusicVeiw() -> isShowMusicVeiw
com.cooee.widgetnative.enjoy.manager.WeatherManager -> com.cooee.widgetnative.enjoy.b.d:
    com.cooee.widgetnative.enjoy.manager.WeatherManager mWeatherManager -> a
    android.content.Context mContext -> b
    boolean showWeatherVeiw -> c
    java.lang.String default_weather_package -> d
    java.lang.String defaultCityName -> e
    java.lang.String defaultWeatherIndex -> f
    int defaultTempC -> g
    com.cooee.weather.clientdocking.WeatherEntity mCurWeatherEntity -> h
    int[] weatherNumbers -> i
    com.cooee.widgetnative.enjoy.manager.WeatherManager getInstance(android.content.Context) -> getInstance
    void initClickView(android.widget.RemoteViews) -> initClickView
    void onClick() -> onClick
    void sendRefreshWeatherBroadcast() -> sendRefreshWeatherBroadcast
    void updateAllWidget(android.widget.RemoteViews) -> updateAllWidget
    boolean isShowWeatherVeiw() -> isShowWeatherVeiw
    void receiveWeatherInfo(android.content.Context,android.content.Intent) -> receiveWeatherInfo
com.cooee.widgetnative.enjoy.manager.WidgetViewManager -> com.cooee.widgetnative.enjoy.b.e:
    com.cooee.widgetnative.enjoy.manager.WidgetViewManager mWidgetViewManager -> a
    java.lang.String TAG -> b
    android.widget.RemoteViews remoteview -> c
    android.content.Context mContext -> d
    com.cooee.widgetnative.enjoy.manager.WidgetViewManager getWidgetViewManager(android.content.Context) -> getWidgetViewManager
    void updateAllWidget() -> updateAllWidget
com.cooee.widgetnative.enjoy.service.ClockWeatherMusicService -> com.cooee.widgetnative.enjoy.service.ClockWeatherMusicService:
    android.view.View ForegroundView -> a
    long preParamId -> b
    android.content.BroadcastReceiver mIntentReceiver -> c
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
com.cooee.widgetnative.enjoy.service.ClockWeatherMusicService$1 -> com.cooee.widgetnative.enjoy.service.a:
    com.cooee.widgetnative.enjoy.service.ClockWeatherMusicService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cooee.widgetnative.enjoy.service.ClockWeatherMusicService$2 -> com.cooee.widgetnative.enjoy.service.b:
    com.cooee.widgetnative.enjoy.service.ClockWeatherMusicService this$0 -> a
    void run() -> run
com.ha.hb.BaseDownloadHelper -> com.a.a.a:
    int APK_STATUS_HAS_INSTALL -> a
    int APK_STATUS_NEED_DOWNLOAD -> b
    int APK_STATUS_NEED_INSTALL -> c
    int APK_STATUS_DOWNLOADING -> d
    int notifyID -> e
    com.ha.hb.HandlerBase handler -> f
    java.util.ArrayList mDownloadingList -> g
    java.util.HashMap mDownloadFinish -> h
    int mDownloadNotificationLayoutId -> i
    int mDownloadNotificationTitleId -> j
    int mDownloadNotificationPercentTipId -> k
    int mDownloadNotificationProgressBarId -> l
    int mDownloadToastTipInsertSDId -> m
    int mDownloadToastTipInternetErrId -> n
    int mDownloadToastTipDownloadingId -> o
    int mDownloadNotificationTipDownloadingId -> p
    int mDownloadNotificationTipDownloadFail -> q
    int mDownloadNotificationTipDownloadFinish -> r
    int mDownloadNotificationIconId -> s
    void initResId(int,int,int,int,int,int,int,int,int,int,int) -> initResId
    void download(android.content.Context,android.content.Context,com.ha.hb.BaseDownloadHelper$DownloadListener,java.lang.String,java.lang.String,boolean) -> download
    void downloadFile$7d8045f4(android.content.Context,android.content.Context,com.ha.hb.BaseDownloadHelper$DownloadListener,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    void initHandler(android.content.Context) -> a
    com.ha.hb.BaseDownloadHelper$DownloadingItem getDownloadingItem(java.lang.String) -> b
    void failAllDowningNotification(android.content.Context) -> failAllDowningNotification
    void removeFinishNotification(android.content.Context,java.lang.String) -> removeFinishNotification
    void removeAllNotification(android.content.Context) -> removeAllNotification
    int access$0() -> a
    int access$1() -> b
    void access$2(java.lang.String) -> a
    long access$3() -> c
    int access$4() -> d
    int access$5() -> e
    int access$6() -> f
    int access$7() -> g
com.ha.hb.BaseDownloadHelper$1 -> com.a.a.b:
    android.content.Context val$activity -> a
    android.content.Context val$context -> b
    java.lang.String val$pkgName -> c
    android.app.Notification val$notification -> d
    java.lang.String val$title -> e
    int val$id -> f
    com.ha.hb.BaseDownloadHelper$DownloadListener val$listener -> g
    java.lang.String val$path -> h
    boolean val$install -> i
    java.lang.String val$resID -> j
    void run() -> run
com.ha.hb.BaseDownloadHelper$2 -> com.a.a.c:
    android.content.Context val$context -> a
    void handleMessage(android.os.Message) -> handleMessage
com.ha.hb.BaseDownloadHelper$DownloadListener -> com.a.a.d:
    void setProxy(java.lang.Object) -> setProxy
    void onDownloadSuccess() -> onDownloadSuccess
    void onDownloadFail() -> onDownloadFail
    void onDownloadProgress(int) -> onDownloadProgress
    void onInstallSuccess(java.lang.String) -> onInstallSuccess
    void showMessage(java.lang.String) -> showMessage
com.ha.hb.BaseDownloadHelper$DownloadingItem -> com.a.a.e:
    java.lang.String packageName -> a
    java.lang.String title -> b
    int id -> c
    android.app.Notification notification -> d
    java.lang.String downloadPath -> e
com.ha.hb.HandlerBase -> com.a.a.f:
    boolean ss(android.os.Message) -> ss
com.ha.hb.MessageBase -> com.a.a.g:
    android.os.Message msgMessage -> a
    android.os.Message hh(com.ha.hb.HandlerBase,int,int,int,java.lang.Object) -> a
com.kpsh.sdk.KpshActivity -> com.kpsh.sdk.KpshActivity:
    java.lang.Class a -> a
    java.lang.Object b -> b
    void onCreate(android.os.Bundle) -> onCreate
    void a(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    void onStart() -> onStart
    void onRestart() -> onRestart
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDestroy() -> onDestroy
com.kpsh.sdk.KpshMsg -> com.kpsh.sdk.a:
    int msgId -> a
    java.lang.String msgTitle -> b
    java.lang.String msgBody -> c
    int allowClear -> d
    int allowRing -> e
    int allowVibrate -> f
    void setMsgTitle(java.lang.String) -> setMsgTitle
    void setMsgBody(java.lang.String) -> setMsgBody
    void setMsgId(int) -> setMsgId
    int getMsgId() -> getMsgId
    java.lang.String getMsgTitle() -> getMsgTitle
    java.lang.String getMsgBody() -> getMsgBody
    void setAllowClear(int) -> setAllowClear
    void setAllowRing(int) -> setAllowRing
    void setAllowVibrate(int) -> setAllowVibrate
    int getAllowClear() -> getAllowClear
    int getAllowRing() -> getAllowRing
    int getAllowVibrate() -> getAllowVibrate
com.kpsh.sdk.KpshReceiver -> com.kpsh.sdk.KpshReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context,android.content.Intent) -> a
    boolean a(android.content.Context) -> a
    boolean a() -> a
com.kpsh.sdk.KpshSdk -> com.kpsh.sdk.KpshSdk:
    boolean isExistSDCard() -> isExistSDCard
    void checkAM(android.content.Context) -> a
    void initSdk(android.content.Context) -> initSdk
    void startKpshService(android.content.Context) -> startKpshService
    boolean setAppKpshTag(android.content.Context,java.lang.String) -> setAppKpshTag
    void setAppKpshForbid(android.content.Context,boolean) -> setAppKpshForbid
    void msgOperationCallback(android.content.Context,int,java.lang.String) -> msgOperationCallback
    void AppExitNotifyKpsh(android.content.Context) -> AppExitNotifyKpsh
    boolean assetsHasKpshMoudle(android.content.Context) -> b
    java.lang.String getModuleVersion(android.content.Context) -> getModuleVersion
    java.lang.String getP04(android.content.Context) -> getP04
    java.lang.String getP04FromConfig(android.content.Context) -> getP04FromConfig
    java.lang.String getP04FromManifest(android.content.Context) -> getP04FromManifest
    com.kpsh.sdk.KpshMsg stringToKpshMsg(android.os.Bundle) -> stringToKpshMsg
    java.lang.String getPmc(android.content.Context) -> getPmc
    java.lang.String getKuwaPmc(android.content.Context) -> getKuwaPmc
com.kpsh.sdk.KpshService -> com.kpsh.sdk.KpshService:
    java.lang.Class a -> a
    java.lang.Object b -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    java.lang.Object a(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
com.kpsh.sdk.a -> com.kpsh.sdk.b:
    android.content.Context a -> a
    java.lang.Class b -> b
    java.lang.Object c -> c
    com.kpsh.sdk.a d -> d
    com.kpsh.sdk.a a(android.content.Context) -> a
    java.lang.Class a() -> a
    java.lang.Object b() -> b
com.kpsh.sdk.b -> com.kpsh.sdk.c:
    void a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    boolean e(android.content.Context) -> e
    boolean a(java.io.File,java.io.File) -> a
    boolean c(android.content.Context) -> c
    boolean a(android.content.Context,java.lang.String,java.io.File) -> a
    boolean b(android.content.Context,java.lang.String,java.io.File) -> b
    int a(android.content.Context,java.io.File,java.io.File) -> a
    void b(java.lang.String) -> b
    boolean a(java.io.File) -> a
    boolean b(java.io.File) -> b
    void c(java.io.File) -> c
    void a() -> a
    java.io.File a(java.lang.String) -> a
    java.io.File d(android.content.Context) -> d
com.kpsh.sdk.c -> com.kpsh.sdk.d:
    int a -> a
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    boolean a(int) -> a
    int b() -> b
    void a(java.lang.Exception) -> a
com.kpsh.sdk.d -> com.kpsh.sdk.e:
    com.kpsh.sdk.KpshReceiver a -> a
    android.content.Context b -> b
    android.content.Intent c -> c
    void run() -> run
com.kpsh.sdk.e -> com.kpsh.sdk.f:
    android.content.Context a -> a
    void run() -> run
com.uuid.control.UuidControl -> com.b.a.a:
    com.uuid.model.SdUuid sdUuid -> a
    com.uuid.model.SysUuid sysUuid -> b
    com.uuid.model.AppUuid appUuid -> c
    com.uuid.control.UuidControl mUuidControl -> d
    java.lang.String uuid -> e
    android.content.Context mContext -> f
    java.lang.String getUniqueID(android.content.Context) -> getUniqueID
    java.lang.String getMaximumUuid(java.util.ArrayList) -> a
    void changeUuid(com.uuid.model.UuidBase,java.lang.String) -> a
    void addAllUUid(java.util.ArrayList,com.uuid.model.UuidBase) -> a
    java.lang.String getCreatUuid(android.content.Context) -> a
com.uuid.model.AppUuid -> com.b.b.a:
    java.util.ArrayList list -> b
    android.content.Context mContext -> c
    java.util.ArrayList getAllUuid() -> getAllUuid
    void changeUuid(java.lang.String) -> changeUuid
com.uuid.model.SdUuid -> com.b.b.b:
    java.util.ArrayList list -> b
    android.content.Context mContext -> c
    java.util.ArrayList getAllUuid() -> getAllUuid
    void changeUuid(java.lang.String) -> changeUuid
com.uuid.model.SysUuid -> com.b.b.c:
    java.util.ArrayList list -> b
    android.content.Context mContext -> c
    java.util.ArrayList getAllUuid() -> getAllUuid
    void changeUuid(java.lang.String) -> changeUuid
com.uuid.model.UuidBase -> com.b.b.d:
    android.content.Context mContext -> a
    void changeUuid(java.lang.String) -> changeUuid
    java.util.ArrayList getAllUuid() -> getAllUuid
com.uuid.utils.FilePateUtils -> com.b.c.a:
    java.lang.String getUUIDExternalFolderOnePath() -> getUUIDExternalFolderOnePath
    java.lang.String getUUIDExternalFolderTwoPath() -> getUUIDExternalFolderTwoPath
    java.lang.String getUUIDInteriorFolderOnePath(android.content.Context) -> getUUIDInteriorFolderOnePath
    java.lang.String getUUIDInteriorFolderTwoPath(android.content.Context) -> getUUIDInteriorFolderTwoPath
    java.lang.String getUUIDExternalFileOnePath() -> getUUIDExternalFileOnePath
    java.lang.String getUUIDExternalFileTwoPath() -> getUUIDExternalFileTwoPath
    java.lang.String getUUIDExternalFileThreePath() -> getUUIDExternalFileThreePath
    java.lang.String getUUIDInteriorFileOnePath(android.content.Context) -> getUUIDInteriorFileOnePath
    java.lang.String getUUIDInteriorFileTwoPath(android.content.Context) -> getUUIDInteriorFileTwoPath
    java.lang.String getUUIDInteriorFileThreePath(android.content.Context) -> getUUIDInteriorFileThreePath
    java.lang.String getUUIDSystemFileOnePath(android.content.Context) -> getUUIDSystemFileOnePath
    java.lang.String getUUIDSystemFileTwoPath(android.content.Context) -> getUUIDSystemFileTwoPath
    java.lang.String getUUIDSystemFileThreePath(android.content.Context) -> getUUIDSystemFileThreePath
    java.lang.String getKpshLogLevelFilePath() -> getKpshLogLevelFilePath
com.uuid.utils.FileToolUtils -> com.b.c.b:
    boolean isSdCardExist() -> isSdCardExist
    boolean isPermissionSym(android.content.Context) -> isPermissionSym
    java.lang.String getSubString(java.lang.String) -> getSubString
    java.lang.String getPackageNames(android.content.Context) -> getPackageNames
    boolean isLenEnough(java.lang.String) -> isLenEnough
    boolean isStrAlphanumeric(java.lang.String) -> isStrAlphanumeric
com.uuid.utils.FilesUtils -> com.b.c.c:
    void WriteFileInfo(android.content.Context,java.lang.String,java.lang.String) -> WriteFileInfo
    java.lang.String ReadUUIDInfo(android.content.Context,java.io.File) -> ReadUUIDInfo
com.uuid.utils.ImeiUtils -> com.b.c.d:
    java.lang.String getAndroidID(android.content.Context) -> getAndroidID
    java.lang.String getImei(android.content.Context,int) -> getImei
    int getDefaultSimId(android.content.Context) -> a
    int getSimSize(android.content.Context) -> b
    java.lang.String getUserImei(android.content.Context,int) -> a
com.uuid.utils.ImsiUtils -> com.b.c.e:
    java.lang.Integer simId_1 -> a
    java.lang.Integer simId_2 -> b
    java.lang.String imsi_1 -> c
    java.lang.String imsi_2 -> d
    android.content.Context mContext -> e
    com.uuid.utils.ImsiUtils instance -> f
    java.lang.String getImsi(android.content.Context) -> getImsi
    com.uuid.utils.ImsiUtils$IMSInfo initMtkSecondDoubleSim() -> a
    com.uuid.utils.ImsiUtils$IMSInfo initMtkDoubleSim() -> b
    com.uuid.utils.ImsiUtils$IMSInfo initSpreadDoubleSim() -> c
    com.uuid.utils.ImsiUtils$IMSInfo initSpreadSecondDoubleSim() -> d
    com.uuid.utils.ImsiUtils$IMSInfo initQualcommDoubleSim() -> e
    com.uuid.utils.ImsiUtils$IMSInfo getIMSI() -> f
com.uuid.utils.ImsiUtils$IMSInfo -> com.b.c.f:
    java.lang.String chipName -> a
    java.lang.String imsi_1 -> b
    java.lang.String imsi_2 -> c
    com.uuid.utils.ImsiUtils this$0 -> d
    java.lang.String toString() -> toString
com.uuid.utils.LogUtils -> com.b.c.g:
    void i(android.content.Context,java.lang.String) -> i
    void v(android.content.Context,java.lang.String) -> v
    void d(android.content.Context,java.lang.String) -> d
    void e(android.content.Context,java.lang.String) -> e
    boolean isLogFileExist() -> a
com.uuid.utils.XorEncryption -> com.b.c.h:
    java.lang.String encrypt(java.lang.String,java.lang.String) -> encrypt
    java.lang.String decrypt(java.lang.String,java.lang.String) -> decrypt
